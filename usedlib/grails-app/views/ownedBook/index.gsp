

<!DOCTYPE html>
<html>
	<head>
		<meta name="layout" content="main">
		<g:set var="entityName" value="${message(code: 'ownedBook.label', default: 'OwnedBook')}" />
		<title><g:message code="default.list.label" args="[entityName]" /></title>
		<script type="text/javascript" src="/usedlib/js/douban_api.js"></script><!-- -->		
	</head>
	<body>
		<div id="list-ownedBook" class="content scaffold-list" role="main">
			<!--<h1><g:message code="default.list.label" args="[entityName]" /></h1>-->
			<g:if test="${flash.message}">
				<div class="message" role="status">${flash.message}</div>
			</g:if>
			
			<div class="well">
				<h2>${ShiroUser.get(params.userid)}的图书</h2>
				<ul class="row" style="list-style-type :none;">
					<g:each in="${ownedBookInstanceList}" var="ownedBookInstance">
						<p hidden="hidden">${bookInstance=ownedBookInstance.book}</p>
						<li class="thumbnail col-md-2" style="height:220px;margin: 10px 7px 5px 7px;">
							<div id=${bookInstance.isbn13}.img>${bookInstance.isbn13}</div>
							<div class="col-md-offset-1" id=${bookInstance.isbn13}.title><g:link class="" controller="book" action="show" id="${bookInstance.id}">${fieldValue(bean: bookInstance, field: "title")}</g:link></div>
						</li>
					</g:each>
				</ul>
			</div>
				
<!--  		<div class="table">
				<table class="table table-striped">
				<thead>
						<tr>
						
							<th><g:message code="ownedBook.book.label" default="Book" /></th>
						
							<th><g:message code="ownedBook.user.label" default="User" /></th>
						
							<g:sortableColumn property="dateCreated" title="${message(code: 'ownedBook.dateCreated.label', default: 'Date Created')}" />
						
						</tr>
					</thead>
					<tbody>
					<g:each in="${ownedBookInstanceList}" status="i" var="ownedBookInstance">
						<tr class="${(i % 2) == 0 ? 'even' : 'odd'}">
						
							<td><g:link action="show" id="${ownedBookInstance.id}">${fieldValue(bean: ownedBookInstance, field: "book")}</g:link></td>
						
							<td>${fieldValue(bean: ownedBookInstance, field: "user")}</td>
						
							<td><g:formatDate date="${ownedBookInstance.dateCreated}" /></td>
						
						</tr>
					</g:each>
					</tbody>
				</table>
			</div>-->
				<div class="pagination">
					<g:paginate total="${ownedBookInstanceCount ?: 0}" />
				</div>

		</div>
			<g:form class=""  style="margin:10px 0px 0px 0px" url="[resource:bookInstance, controller:'book',action:'searchBook']" >
				<g:textField class="nav navbar-nav navbar-left"name="searchString" required="" value="请输入ISBN号或者书名" onclick="this.value='';focus()"/>
				<g:submitButton class="nav navbar-nav navbaar-left" name="searchBook" class="" value="搜索"/>
			</g:form>		
			<input type="button" onClick="onclick1()" value="button"/>
		<div id="searchBook" class="well">
			<input type="hidden" id="user.id" value ="${session.ShiroUser?.id}" />
			<ul id="searchBookUL" class="row" style="list-style-type :none;">
			
			</ul>
		</div>
					<div id="test">{"count":20,"start":0,"total":6653,"books":[{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["The OReilly Java Authors"],"pubdate":"2003-9","tags":[{"count":16,"name":"java","title":"java"},{"count":6,"name":"最佳实践","title":"最佳实践"},{"count":4,"name":"J2EE","title":"J2EE"},{"count":3,"name":"编程语言","title":"编程语言"},{"count":3,"name":"计算机","title":"计算机"},{"count":2,"name":"O'Reilly","title":"O'Reilly"},{"count":2,"name":"程序开发","title":"程序开发"},{"count":1,"name":"Java","title":"Java"}],"origin_title":"","image":"http:\/\/img3.douban.com\/mpic\/s1957104.jpg","binding":"简裝本","translator":[],"catalog":"","pages":"318","images":{"small":"http:\/\/img3.douban.com\/spic\/s1957104.jpg","large":"http:\/\/img3.douban.com\/lpic\/s1957104.jpg","medium":"http:\/\/img3.douban.com\/mpic\/s1957104.jpg"},"alt":"http:\/\/book.douban.com\/subject\/1246192\/","id":"1246192","publisher":"中国电力出版社","isbn10":"7508314131","isbn13":"9787508314136","title":"Java Enterprise最佳实践","url":"http:\/\/api.douban.com\/v2\/book\/1246192","alt_title":"","author_intro":"","summary":"《Java Enterprise最佳实践》内容简介：Java 2企业版（J2EE）API已经改变了我们对企业计算的思维方式。不过，许多程序员都发现仅仅学习J2EE API是不够的。要使用Servlet、JDBC、XML、EJB和JSP来编写高效、健壮的企业级代码，可能是一项非常艰巨的任务。实际上，若想在编写J2EE应用代码方面成为一个专家，惟一的方法就是经过数年尝试与错误的历练。\n毋庸讳言，《Java Enterprise最佳实践》将为你提供这些作者的一些经验之谈，从而为你答疑解惑。《Java Enterprise最佳实践》并非教你学习一组Java Enterprise库，而是传授给你如何将它们有效并高效地运用在分布式应用中。是否需要对编组代码进行单元测试？为什么需要正确地引导DOM？什么是MBean外观模式以及它在何时有用？为什么许多数据库开发人员在创建其模式时未能将国际化考虑在内？\n《Java Enterprise最佳实践》凝炼了O'Reilly Java Enterprise畅销书作者们的真知灼见，并提供了有关以下J2EE主题的非常有用的技巧和诀窍：\n* Enterprise JavaBeans（EJB）。\n* JDBC。\n* Java Servlet。\n* JavaServer Pages（JSP）和定制标签库。\n* 远程方法调用（RMI）。\n* XML。\n* Java管理扩展（JMX）。\n* 国际化。\n* JavaMail。\n* 企业应用的性能调整。\n对于每一位严谨的Java Enterprise开发人员来说，《Java Enterprise最佳实践》都是一本必选的书。无论从对有关RMI对象的编组和解组规则的讨论来说，还是从提供处理数据库连接池的具体方法方面来说，《Java Enterprise最佳实践》都汇集了诸多睿智的建议，可以使你的“普普通通”的Java Enterprise应用变得“卓尔不群”。","price":"38.00元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["(美)James Gosling","Frank Yellin","Java 小组"],"pubdate":"1997-10","tags":[{"count":1,"name":"JAVA应用程序设计","title":"JAVA应用程序设计"},{"count":1,"name":"其他","title":"其他"}],"origin_title":"","image":"http:\/\/img5.douban.com\/mpic\/s1022519.jpg","binding":"平装","translator":["钱涛\/党治林"],"catalog":"（下册）\n前言\n简短历史\n关于Java丛书\nAPI工作成员\n关于Java包\n参考资料\n类层次图\n\n第一章 java．awt包类\n1．1 BorderLayout类\n1．2 Button类\n1．3 Canvas类\n1．4 CardLayout类\n1．5 Checkbox类\n1．6 CheckboxGroup类\n1．7 CheckboxMenuItem类\n1．8 Choice类\n1．9 Color类\n1．10 Component类\nl．11 Container类\n1．12 Dialog类\n1．13 Dimension类\n1．14 Event类\n1．15 FileDialog类\n1．16 FlowLayout类\n1．17 Font类\nl．18 FontMetrics类\n1．19 Frame类\n1．20 Graphics类\nl．21 GridBagConstraints类\n1．22 GridBagLayout类\n1．23 GridLayout类\n1．24 Image类\n1．25 Insets类\n1．26 Label类\n1．27 List类\n1．28 MediaTracker类\n1．29 Menu类\n1．30 MenuBar类\nl．31 MenuComponent类\n1．32 MenuItem类\n1．33 Panel类\n1．34 Point类\nl．35 Polygon类\nl．36 Rectangle类\n1．37 Scrollbar类\n1．38 TextArea类\n1．39 TextComponent类\n1．40 TextField类\n1．41 Toolkit类\n1．42 Window类\n接口（Interface）\n1．43 LayoutManager接口\n1．44 MenuContalner接口\n异常（Exception）\n1．45 AWTException类\n错误（Error）\n1．46 AWTError类\n\n第二章 java．awt．image包类\n2．1 ColorModel类\n2．2 CropImageFilter类\n2．3 DirectColorModel类\n2．4 FilteredImageSource类\n2．5 ImageFilter类\n2．6 IndexColorModel类\n2．7 MemoryImageSource类\n2．8 PixelGrabber类\n2．9 RGBImageFilter类\n接口\n2．10 ImageConsumer接口\n2．11 ImageObserver接口\n2．12 ImageProducer接口\n\n第三章 java．awt．peer包接口\n3．1 ButtonPeer接口\n3．2 CanvasPeer接口\n3．3 CheckboxMenuItemPeer接口\n3．4 CheckboxPeer接口\n3．5 CholcePeer接口\n3．6 ComponentPeer接口\n3．7 ContainerPeer接口\n3．8 DlaglogPeer接口\n3．9 FileDialogPeer接口\n3．10 FramePeer接口\n3．11 LabelPeer接口\n3．12 ListPeer接口\n3．13 MenuBarPeer接口\n3．14 MenuComponentPeer接口\n3．15 MenultemPeer接口\n3．16 MenuPeer接口\n3．17 PanelPeer接口\n3．18 ScrollbarPeer接口\n3．19 TextAreaPeer接口\n3．20 TextComponentPeer接口\n3．21 TextFieldPeer接口\n3．22 WindowPeer接口\n\n第四章 java．applet包类\n4．1 Applet类接口\n4．2 AppletContext接口\n4．3 AppletStub接口\n4．4 AudioClip接口\n\n\n","pages":"274","images":{"small":"http:\/\/img5.douban.com\/spic\/s1022519.jpg","large":"http:\/\/img5.douban.com\/lpic\/s1022519.jpg","medium":"http:\/\/img5.douban.com\/mpic\/s1022519.jpg"},"alt":"http:\/\/book.douban.com\/subject\/1031368\/","id":"1031368","publisher":"北京大学出版社","isbn10":"730103475X","isbn13":"9787301034750","title":"Java应用程序设计接口(下册)--窗口工具箱和applet","url":"http:\/\/api.douban.com\/v2\/book\/1031368","alt_title":"","author_intro":"","summary":"","price":"45.00"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Buitenzorg, Java 's Lands Plantentuin"],"pubdate":"2010-2","tags":[],"origin_title":"","image":"http:\/\/img5.douban.com\/mpic\/s5167197.jpg","binding":"","translator":[],"catalog":"","pages":"414","images":{"small":"http:\/\/img5.douban.com\/spic\/s5167197.jpg","large":"http:\/\/img5.douban.com\/lpic\/s5167197.jpg","medium":"http:\/\/img5.douban.com\/mpic\/s5167197.jpg"},"alt":"http:\/\/book.douban.com\/subject\/6189312\/","id":"6189312","publisher":"","isbn10":"1144147999","isbn13":"9781144147998","title":"Catalogus Plantarum Quae in Horto Botanico Bogoriensi Coluntur","url":"http:\/\/api.douban.com\/v2\/book\/6189312","alt_title":"","author_intro":"","summary":"This is an EXACT reproduction of a book published before 1923. This IS NOT an OCR'd book with strange characters, introduced typographical errors, and jumbled words.  This book may have occasional imperfections such as missing or blurred pages, poor pictures, errant marks, etc. that were either part of the original artifact, or were introduced by the scanning process. We believe this work is culturally important, and despite the imperfections, have elected to bring it back into print as part of our continuing commitment to the preservation of printed works worldwide. We appreciate your understanding of the imperfections in the preservation process, and hope you enjoy this valuable book.","price":"$ 39.27"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Java, L. Collins; Collins, Java L.;"],"pubdate":"2009-6","tags":[],"origin_title":"","image":"http:\/\/img5.douban.com\/mpic\/s4892849.jpg","binding":"","translator":[],"catalog":"","pages":"132","images":{"small":"http:\/\/img5.douban.com\/spic\/s4892849.jpg","large":"http:\/\/img5.douban.com\/lpic\/s4892849.jpg","medium":"http:\/\/img5.douban.com\/mpic\/s4892849.jpg"},"alt":"http:\/\/book.douban.com\/subject\/6150090\/","id":"6150090","publisher":"","isbn10":"0982058772","isbn13":"9780982058770","title":"A Hole in My Soul, My Father's Sin","url":"http:\/\/api.douban.com\/v2\/book\/6150090","alt_title":"","author_intro":"","summary":"A HOLE IN MY SOUL: My Father's Sin Fatherless homes have never been much of a focus until recent years. It is a growing epidemic that fathers are no longer in the home for whatever cause. Th is gap is creating a negative eff ect both naturally and spiritually. Th is is a book for every person whose father has left, died, or was never there, and they feel like there is something missing. Like there is a hole in a part of them, a \"hole\" in their soul, which needs to be fi lled so that they can move on as a \"whole\" person. Th is book allows us to investigate and ask questions that some wish we would leave alone; but asking the questions and dealing with them will help strengthen you and help you gain freedom to become all that you can for the glory of God, sealing the hole as you become whole","price":"$ 16.89"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Christoph Gerhard Jonker, Java Johann"],"pubdate":"2009-7","tags":[],"origin_title":"","image":"http:\/\/img3.douban.com\/mpic\/s26351323.jpg","binding":"","translator":[],"catalog":"","pages":"254","images":{"small":"http:\/\/img3.douban.com\/spic\/s26351323.jpg","large":"http:\/\/img3.douban.com\/lpic\/s26351323.jpg","medium":"http:\/\/img3.douban.com\/mpic\/s26351323.jpg"},"alt":"http:\/\/book.douban.com\/subject\/12704993\/","id":"12704993","publisher":"","isbn10":"1113075066","isbn13":"9781113075062","title":"Een Oud-Javaansch Wetboek Vergeleken Met Indische Rechtsbronnen","url":"http:\/\/api.douban.com\/v2\/book\/12704993","alt_title":"","author_intro":"","summary":"","price":"$ 29.10"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Christoph Gerhard Jonker, Java Johann"],"pubdate":"2009-7","tags":[],"origin_title":"","image":"http:\/\/img3.douban.com\/mpic\/s26576965.jpg","binding":"","translator":[],"catalog":"","pages":"254","images":{"small":"http:\/\/img3.douban.com\/spic\/s26576965.jpg","large":"http:\/\/img3.douban.com\/lpic\/s26576965.jpg","medium":"http:\/\/img3.douban.com\/mpic\/s26576965.jpg"},"alt":"http:\/\/book.douban.com\/subject\/12704994\/","id":"12704994","publisher":"","isbn10":"1113075090","isbn13":"9781113075093","title":"Een Oud-Javaansch Wetboek Vergeleken Met Indische Rechtsbronnen","url":"http:\/\/api.douban.com\/v2\/book\/12704994","alt_title":"","author_intro":"","summary":"","price":"$ 35.02"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Collins, Java L."],"pubdate":"","tags":[],"origin_title":"","image":"http:\/\/img3.douban.com\/pics\/book-default-medium.gif","binding":"Pap","translator":[],"catalog":"","pages":"","images":{"small":"http:\/\/img3.douban.com\/pics\/book-default-small.gif","large":"http:\/\/img3.douban.com\/pics\/book-default-large.gif","medium":"http:\/\/img3.douban.com\/pics\/book-default-medium.gif"},"alt":"http:\/\/book.douban.com\/subject\/2841183\/","id":"2841183","publisher":"Cornerstone Pub Inc","isbn10":"1882185617","isbn13":"9781882185610","title":"A Letter To My Sisters","url":"http:\/\/api.douban.com\/v2\/book\/2841183","alt_title":"","author_intro":"","summary":"","price":"131.00元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["De Java-Suikerindustrie, Proefstation Vo"],"pubdate":"2010-5","tags":[],"origin_title":"","image":"http:\/\/img5.douban.com\/mpic\/s22763169.jpg","binding":"平装","translator":[],"catalog":"","pages":"650","images":{"small":"http:\/\/img5.douban.com\/spic\/s22763169.jpg","large":"http:\/\/img5.douban.com\/lpic\/s22763169.jpg","medium":"http:\/\/img5.douban.com\/mpic\/s22763169.jpg"},"alt":"http:\/\/book.douban.com\/subject\/13553357\/","id":"13553357","publisher":"Nabu Press","isbn10":"1149470739","isbn13":"9781149470732","title":"Mededeelingen Van Het Proefstation Voor de Java-Suikerindustrie Volume Deel.7 1917","url":"http:\/\/api.douban.com\/v2\/book\/13553357","alt_title":"","author_intro":"","summary":"","price":"$ 52.83"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["De Java-Suikerindustrie, Proefstation Vo"],"pubdate":"2010-5","tags":[],"origin_title":"","image":"http:\/\/img5.douban.com\/mpic\/s22763119.jpg","binding":"平装","translator":[],"catalog":"","pages":"662","images":{"small":"http:\/\/img5.douban.com\/spic\/s22763119.jpg","large":"http:\/\/img5.douban.com\/lpic\/s22763119.jpg","medium":"http:\/\/img5.douban.com\/mpic\/s22763119.jpg"},"alt":"http:\/\/book.douban.com\/subject\/13552523\/","id":"13552523","publisher":"Nabu Press","isbn10":"1149462221","isbn13":"9781149462225","title":"Mededeelingen Van Het Proefstation Voor de Java-Suikerindustrie Volume Jaarg.1922","url":"http:\/\/api.douban.com\/v2\/book\/13552523","alt_title":"","author_intro":"","summary":"","price":"$ 52.83"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["De Java-Suikerindustrie, Proefstation Vo"],"pubdate":"","tags":[],"origin_title":"","image":"http:\/\/img3.douban.com\/mpic\/s14643991.jpg","binding":"","translator":[],"catalog":"","pages":"416","images":{"small":"http:\/\/img3.douban.com\/spic\/s14643991.jpg","large":"http:\/\/img3.douban.com\/lpic\/s14643991.jpg","medium":"http:\/\/img3.douban.com\/mpic\/s14643991.jpg"},"alt":"http:\/\/book.douban.com\/subject\/13552524\/","id":"13552524","publisher":"","isbn10":"114946223X","isbn13":"9781149462232","title":"Mededeelingen Van Het Proefstation Voor de Java-Suikerindustrie Volume Deel.11 1921","url":"http:\/\/api.douban.com\/v2\/book\/13552524","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["De Java-Suikerindustrie, Proefstation Vo"],"pubdate":"","tags":[],"origin_title":"","image":"http:\/\/img3.douban.com\/mpic\/s14643993.jpg","binding":"","translator":[],"catalog":"","pages":"508","images":{"small":"http:\/\/img3.douban.com\/spic\/s14643993.jpg","large":"http:\/\/img3.douban.com\/lpic\/s14643993.jpg","medium":"http:\/\/img3.douban.com\/mpic\/s14643993.jpg"},"alt":"http:\/\/book.douban.com\/subject\/13552525\/","id":"13552525","publisher":"","isbn10":"1149462248","isbn13":"9781149462249","title":"Mededeelingen Van Het Proefstation Voor de Java-Suikerindustrie Volume Deel.9 1919","url":"http:\/\/api.douban.com\/v2\/book\/13552525","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Java, Java"],"pubdate":"","tags":[],"origin_title":"","image":"http:\/\/img3.douban.com\/mpic\/s14706301.jpg","binding":"","translator":[],"catalog":"","pages":"32","images":{"small":"http:\/\/img3.douban.com\/spic\/s14706301.jpg","large":"http:\/\/img3.douban.com\/lpic\/s14706301.jpg","medium":"http:\/\/img3.douban.com\/mpic\/s14706301.jpg"},"alt":"http:\/\/book.douban.com\/subject\/13588920\/","id":"13588920","publisher":"","isbn10":"1149930039","isbn13":"9781149930038","title":"Proceedings of the Court Martial, Held on the Officers and Crew of His Majesty's Late Ship, the Java.","url":"http:\/\/api.douban.com\/v2\/book\/13588920","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":2012,"average":"9.1","min":0},"subtitle":"","author":["[美] Bruce Eckel"],"pubdate":"2007-6","tags":[{"count":1734,"name":"Java","title":"Java"},{"count":599,"name":"编程思想","title":"编程思想"},{"count":513,"name":"TinkingInJava","title":"TinkingInJava"},{"count":450,"name":"编程","title":"编程"},{"count":356,"name":"计算机","title":"计算机"},{"count":263,"name":"程序设计","title":"程序设计"},{"count":215,"name":"经典","title":"经典"},{"count":146,"name":"Programming","title":"Programming"}],"origin_title":"Thinking in Java","image":"http:\/\/img5.douban.com\/mpic\/s2553047.jpg","binding":"平装","translator":["陈昊鹏"],"catalog":"读者评论\n前言\n简介\n第1章 对象导论\n1.1 抽象过程\n1.2 每个对象都有一个接口\n1.3 每个对象都提供服务\n1.4 被隐藏的具体实现\n1.5 复用具体实现\n1.6 继承\n1.6.1 “是一个”（is-a）与“像是一个”（is-like-a）关系\n1.7 伴随多态的可互换对象\n1.8 单根继承结构\n1.9 容器\n1.9.1 参数化类型（范型）\n1.10 对象的创建和生命期\n1.11 异常处理：处理错误\n1.12 并发编程\n1.13 Java与Internet\n1.13.1 Web是什么\n1.13.2 客户端编程\n1.13.3 服务器端编程\n1.22 总结\n第2章 一切都是对象\n2.1 用引用操纵对象\n2.2 必须由你创建所有对象\n2.2.1 存储到什么地方\n2.2.2 特例：基本类型\n2.2.3 Java中的数组\n2.3 永远不需要销毁对象\n2.3.1 作用域\n2.3.2 对象的作用域\n2.4 创建新的数据类型：类\n2.4.1 域和方法\n2.4.2 基本成员默认值\n2.5 方法、参数和返回值\n2.5.1 参数列表\n2.6 构建一个Java程序\n2.6.1 名字可见性\n2.6.2 运用其他构件\n2.6.3 static 关键字\n2.7 你的第一个Java程序\n编译和运行\n2.8 注释和嵌入式文档\n2.8.1 注释文档\n2.8.2 语法\n2.8.3 嵌入式HTML\n2.8.4 一些标签示例\n2.8.5 文档示例\n2.9 编码风格\n2.10 总结\n2.11 练习\n第3章 操作符\n3.1 更简单的打印语句\n3.2 使用Java操作符\n3.3 优先级\n3.4 赋值\n3.4.1 方法调用中的别名问题\n3.5 算术操作符\n3.5.1 一元加、减操作符\n3.6 自动递增和递减\n3.7 关系操作符\n3.7.1 测试对象的等价性\n3.8 逻辑操作符\n3.8.1 短路\n3.9 直接常量\n3.9.1 指数记数法\n3.10 按位操作符\n3.11 移位操作符\n3.12 三元操作符 if-else\n3.13 字符串操作符 + 和 +=\n3.14 使用操作符时常犯的错误\n3.15 类型转换操作符\n3.15.1 截尾和舍入\n3.15.2提升\n3.16 Java没有“sizeof”\n3.17 操作符小结\n3.18 总结\n第4章 控制执行流程\n4.1 true和false\n4.2 if-else\n4.3 迭代\n4.3.1 do-while\n4.3.2 for\n4.3.3 逗号操作符\n4.4 Foreach语法\n4.5 return\n4.6 break和 continue\n4.7 臭名昭著的“goto”\n4.8 switch\n4.9 总结\n第5章 初始化与清理\n5.1 用构造器确保初始化\n5.2 方法重载\n5.2.1 区分重载方法\n5.2.2 涉及基本类型的重载\n5.2.3 以返回值区分重载方法\n5.3 缺省构造器\n5.4 this关键字\n5.4.1 在构造器中调用构造器\n5.4.2 static的含义\n5.5 清理：终结处理和垃圾回收\n5.5.1 finalize()的用途何在\n5.5.2 你必须实施清理\n5.5.3 终结条件\n5.5.4 垃圾回收器如何工作\n5.6 成员初始化\n5.6.1 指定初始化\n5.7 构造器初始化\n5.7.1 初始化顺序\n5.7.2. 静态数据的初始化\n5.7.3. 显式的静态初始化\n5.7.4. 非静态实例初始化\n5.8 数组初始化\n5.8.1 可变参数列表\n5.9 枚举类型\n5.10 总结\n第6章 访问权限控制\n第7章 复用类\n第8章 多态\n第9章 接口\n第10章 内部类\n第11章 持有对象\n第12章 通过异常处理错误\n第13章 字符串\n第14章 类型信息\n第15章 泛型\n第16章 数组\n第17章 容器深入研究\n第18章 Java I\/O系统\n第19章 枚举类型\n第20章 注解\n第21章 并发\n第22章 图形化用户界面\n附录A 补充材料\n可下载的补充材料\nThinking in C：Java的基础\nJava编程思想 研讨课\nHands-on Java研讨课CD\nThinking in Objects研讨课\nThinking in Enterprise Java\nThinking in Patterns(with Java)\nThinking in Patterns研讨课\n设计咨询与复审\n附录B 资源\n软件\n编辑器与IDE\n书籍\n分析与设计\nPython\n我的著作列表\n索引","pages":"880","images":{"small":"http:\/\/img5.douban.com\/spic\/s2553047.jpg","large":"http:\/\/img5.douban.com\/lpic\/s2553047.jpg","medium":"http:\/\/img5.douban.com\/mpic\/s2553047.jpg"},"alt":"http:\/\/book.douban.com\/subject\/2130190\/","id":"2130190","publisher":"机械工业出版社","isbn10":"7111213823","isbn13":"9787111213826","title":"Java编程思想 （第4版）","url":"http:\/\/api.douban.com\/v2\/book\/2130190","alt_title":"Thinking in Java","author_intro":"Bruce Eckel是MindView公司（www.MindView.net）的总裁，该公司向客户提供软件咨询和培训。他是C++标准委员会拥有表决权的成员之一，拥有应用物理学学士和计算机工程硕士学位。除本书外，他还是《C++编程思想》的作者，并与人合著了《C++编程思想 第2卷》（这两本书的英文影印版及中文版均已由机械工业出版社引进出版）及其他著作。他已经发表了150多篇论文，还经常参加世界各地的研讨会并进行演讲。","summary":"本书赢得了全球程序员的广泛赞誉，即使是最晦涩的概念，在Bruce Eckel的文字亲和力和小而直接的编程示例面前也会化解于无形。从Java的基础语法到最高级特性（深入的面向对象概念、多线程、自动项目构建、单元测试和调试等），本书都能逐步指导你轻松掌握。\n从本书获得的各项大奖以及来自世界各地的读者评论中，不难看出这是一本经典之作。本书的作者拥有多年教学经验，对C、C++以及Java语言都有独到、深入的见解，以通俗易懂及小而直接的示例解释了一个个晦涩抽象的概念。本书共22章，包括操作符、控制执行流程、访问权限控制、复用类、多态、接口、通过异常处理错误、字符串、泛型、数组、容器深入研究、Java I\/O系统、枚举类型、并发以及图形化用户界面等内容。这些丰富的内容，包含了Java语言基础语法以及高级特性，适合各个层次的Java程序员阅读，同时也是高等院校讲授面向对象程序设计语言以及Java语言的绝佳教材和参考书。\n第4版特点：\n适合初学者与专业人员的经典的面向对象叙述方式，为更新的Java SE5\/6增加了新的示例和章节。\n 测验框架显示程序输出。","price":"108.00元"},{"rating":{"max":10,"numRaters":506,"average":"8.5","min":0},"subtitle":"","author":["（美）文纳斯"],"pubdate":"2003-9","tags":[{"count":513,"name":"java","title":"java"},{"count":352,"name":"jvm","title":"jvm"},{"count":345,"name":"虚拟机","title":"虚拟机"},{"count":152,"name":"深入Java虚拟机","title":"深入Java虚拟机"},{"count":96,"name":"计算机","title":"计算机"},{"count":88,"name":"Java","title":"Java"},{"count":69,"name":"编程","title":"编程"},{"count":65,"name":"软件开发","title":"软件开发"}],"origin_title":"Inside the Java Virtual Machine","image":"http:\/\/img5.douban.com\/mpic\/s1106498.jpg","binding":"平装","translator":["曹晓钢","蒋靖"],"catalog":"译者序\n前言\n第1章 Java体系结构介绍\n第2章 平台无关\n第3章 安全\n第4章 网络移动性\n第5章 Java虚拟机\n第6章 Java class文件\n第7章 类型的生命周期\n第8章 连接模型\n第9章 垃圾收集\n第10章 栈和局部变量操作\n第11章 类型转换\n第12章 整数运算\n第13章 逻辑运算\n第14章 浮点运算\n第15章 对象和数组\n第16章 控制流\n第17章 异常\n第18章 finally子句\n第19章 方法的调用与返回\n第20章 指令invokespecial\n第21章 线程同步\n附录A 按操作码助记符排列的指令集\n附录B 按功能排列的操作码助记符\n附录C 按操作码字节值排列的操作码助记符\n附录D Java虚拟机的一个模拟：“Slices of Pi”","pages":"461","images":{"small":"http:\/\/img5.douban.com\/spic\/s1106498.jpg","large":"http:\/\/img5.douban.com\/lpic\/s1106498.jpg","medium":"http:\/\/img5.douban.com\/mpic\/s1106498.jpg"},"alt":"http:\/\/book.douban.com\/subject\/1138768\/","id":"1138768","publisher":"机械工业出版社","isbn10":"7111128052","isbn13":"9787111128052","title":"深入Java虚拟机(原书第2版)","url":"http:\/\/api.douban.com\/v2\/book\/1138768","alt_title":"Inside the Java Virtual Machine","author_intro":"Bill Venners有14年编写软件专著的经验。他在硅谷的Artima软件公司提供软件咨询和培训服务。自1996年以来，他已经编写了40多篇有关Java技术的文章。他在《Java World杂志》辟有热闹专栏，介绍Java内部细节、面向对象设计技术和Jini技术。他还是artima.com的作者和网站管","summary":"本书作者曾因本书荣获专业技术杂志《Java Report》评选的优秀作者奖，细心的读者可以从网上找到许多对本书第1版的赞誉。作者以易于理解的方式深入揭示了Java虚拟机的内部工作原理，深入理解这些内容，将对读者更快速地编写更高效的程序大有裨益！\n本书共分20章，第1-4章解释了Java虚拟机的体系结构，包括Java栈、堆、方法区、执行引擎等；第5-20章深入描述了Java技术的内部细节，包括垃圾收集、Java安全模型、Java的连接模型和动态扩展机制、class文件、运算及流程控制等等，其中第6章和附录A-C安全可以作为class文件和指令集的参考手册。本书还附带光盘，光盘中包含用以辅助说明正文内容的交互式例示applet及示例源代码。","price":"58.0"},{"rating":{"max":10,"numRaters":685,"average":"8.7","min":0},"subtitle":"基础知识","author":["[美] 霍斯特曼","[美] 科奈尔"],"pubdate":"2006-5","tags":[{"count":515,"name":"JAVA","title":"JAVA"},{"count":186,"name":"编程","title":"编程"},{"count":120,"name":"计算机","title":"计算机"},{"count":92,"name":"JAVA2核心技术","title":"JAVA2核心技术"},{"count":90,"name":"java基础","title":"java基础"},{"count":73,"name":"Java","title":"Java"},{"count":69,"name":"经典","title":"经典"},{"count":68,"name":"程序设计","title":"程序设计"}],"origin_title":"Core java 2. Volume I, Fundamentals","image":"http:\/\/img3.douban.com\/mpic\/s1815135.jpg","binding":"平装","translator":["叶乃文","邝劲筠 等"],"catalog":"","pages":"691","images":{"small":"http:\/\/img3.douban.com\/spic\/s1815135.jpg","large":"http:\/\/img3.douban.com\/lpic\/s1815135.jpg","medium":"http:\/\/img3.douban.com\/mpic\/s1815135.jpg"},"alt":"http:\/\/book.douban.com\/subject\/1781451\/","id":"1781451","publisher":"机械工业出版社","isbn10":"7111185234","isbn13":"9787111185239","title":"JAVA 2核心技术 卷Ⅰ","url":"http:\/\/api.douban.com\/v2\/book\/1781451","alt_title":"Core java 2. Volume I, Fundamentals","author_intro":"Cay S.Horstmann是圣何塞州立大学计算机科学系教授。他曾经是Preview Systems公司的副总裁和首席技术官，曾任许多大型公司，大学知组织的C++、Java与因特网编程顾问。他还撰写了众多技术和学术专著，并参与编写《Core JavaServer Faces》一书。","summary":"本书是Java技术经典参考书，多年畅销不衰，第7版在保留以前版本风格的基础上，涵盖Java2开发平台标准版J2SE5.0的基础知识，主要内容包括面各对象程序设计、反射与代理、接口与内部类、事件监听器模型、使用Swing UI工具箱进行图形用户界面设计，异常处理、流输入\/输出和对象序列化、泛型程序设计等。\n本书内容翔实、深入浅出，附有大量程序实例，极具实用价值，是Java初学者和Java程序员的必备参考书。","price":"88.00元"},{"rating":{"max":10,"numRaters":99,"average":"7.9","min":0},"subtitle":"","author":["[捷] Jaroslav Tulach"],"pubdate":"2011-3","tags":[{"count":191,"name":"架构","title":"架构"},{"count":145,"name":"设计","title":"设计"},{"count":116,"name":"框架","title":"框架"},{"count":80,"name":"API","title":"API"},{"count":68,"name":"编程","title":"编程"},{"count":55,"name":"软件开发","title":"软件开发"},{"count":43,"name":"计算机","title":"计算机"},{"count":39,"name":"Java","title":"Java"}],"origin_title":"Practical API Design: Confessions of a Java Framework Architect","image":"http:\/\/img5.douban.com\/mpic\/s4656028.jpg","binding":"平装","translator":["王磊","朱兴"],"catalog":"第一部分 理论与理由\n第1章 软件开发的艺术\t4\n1.1 理性主义，经验主义以及无绪\t4\n1.2 软件的演变过程\t6\n1.3 大型软件\t8\n1.4 漂亮，真理和优雅\t9\n1.5 更好的无绪\t12\n第2章 设计API的动力之源\t14\n2.1 分布式开发\t14\n2.2 模块化应用程序\t16\n2.3 交流互通才是一切\t20\n2.4 经验主义编程方式\t22\n2.5 开发第一个版本通常比较容易\t24\n第3章 评价API好坏的标准\t26\n3.1 方法和字段签名\t26\n3.2 文件及其内容\t27\n3.3 环境变量和命令行选项\t29\n3.4 文本信息也是API\t30\n3.5 协议\t32\n3.6 行为\t35\n3.7 国际化支持和信息国际化\t35\n3.8 API的广泛定义\t37\n3.9 如何检查API的质量\t37\n3.9.1 可理解性\t37\n3.9.2 一致性\t38\n3.9.3 可见性\t39\n3.9.4 简单的任务应该有简单的方案\t40\n3.9.5 保护投资\t40\n第4章 不断变化的目标\t42\n4.1 第一个版本远非完美\t42\n4.2 向后兼容\t43\n4.2.1 源代码兼容\t43\n4.2.2 二进制兼容\t44\n4.2.3 功能兼容——阿米巴变形虫效应\t50\n4.3 面向用例的重要性\t52\n4.4 API设计评审\t55\n4.5 一个API的生命周期\t56\n4.6 逐步改善\t60\n第二部分 设计实战\n第5章 只公开你要公开的内容\t67\n5.1 方法优于字段\t68\n5.2 工厂方法优于构造函数\t70\n5.3 让所有内容都不可更改\t71\n5.4 避免滥用setter方法\t72\n5.5 尽可能通过友元的方式来公开功能\t73\n5.6 赋予对象创建者更多权利\t77\n5.7 避免暴露深层次继承\t82\n第6章 面向接口而非实现进行编程\t85\n6.1 移除方法或者字段\t87\n6.2 移除或者添加一个类或者接口\t88\n6.3 向现有的继承体系中添加一个接口或者类\t88\n6.4 添加方法或者字段\t88\n6.5 Java中接口和类的区别\t90\n6.6 弱点背后的优点\t91\n6.7 添加方法的另一种方案\t92\n6.8 抽象类有没有用呢\t94\n6.9 要为增加参数做好准备\t95\n6.10 接口VS.类\t97\n第7章 模块化架构\t98\n7.1 模块化设计的类型\t100\n7.2 组件定位和交互\t103\n7.3 编写扩展点\t116\n7.4 循环依赖的必要性\t117\n7.5 满城尽是Lookup\t121\n7.6 Lookup的滥用\t126\n第8章 设计API时要区分其目标用户群\t129\n8.1 C和Java语言中如何定义API和SPI\t129\n8.2 API演进不同于SPI演进\t131\n8.3\tjava.io.Writer这个类从JDK 1.4到JDK 5的演进\t131\n8.4 合理分解API\t143\n第9章 牢记可测试性\t147\n9.1 API设计和测试\t148\n9.2 规范的光环正在褪去\t151\n9.3 好工具让API设计更简单\t153\n9.4 兼容性测试套件\t155\n第10章 与其他API协作\t158\n10.1 谨慎使用第三方API\t158\n10.2 只暴露抽象内容\t162\n10.3 强化API的一致性\t164\n10.4 代理和组合\t168\n10.5 避免API的误用\t176\n10.6 不要滥用JavaBeans那种监听器机制\t180\n第11章 API具体运行时的一些内容\t184\n11.1 不要冒险\t186\n11.2 可靠性与无绪\t189\n11.3 同步和死锁\t191\n11.3.1 描述线程模型\t192\n11.3.2 Java Monitors中的陷阱\t193\n11.3.3 触发死锁的条件\t196\n11.3.4 测试死锁\t201\n11.3.5 对条件竞争进行测试\t204\n11.3.6 分析随机故障\t206\n11.3.7 日志的高级用途\t208\n11.3.8 使用日志记录程序控制流程\t210\n11.4 循环调用的问题\t215\n11.5 内存管理\t218\n第12章 声明式编程\t223\n12.1 让对象不可变\t225\n12.2 不可变的行为\t229\n12.3 文档兼容性\t230\n第三部分 日常生活\n第13章 极端的意见有害无益\t236\n13.1 API必须是漂亮的\t237\n13.2 API必须是正确的\t237\n13.3 API应该尽量简单\t240\n13.4 API必须是高性能的\t242\n13.5 API必须绝对兼容\t242\n13.6 API必须是对称的\t245\n第14章 API设计中的矛盾之处\t247\n14.1 API设计中的自相矛盾\t248\n14.2 背后隐藏的工作\t251\n14.3 不要害怕发布一个稳定的API\t252\n14.4 降低维护费用\t255\n第15章 改进API\t258\n15.1 让有问题的类库重新焕发活力\t259\n15.2 自觉地升级与无意识地被迫升级\t265\n15.3 可选的行为\t268\n15.4 相似API的桥接和共存\t274\n第16章 团队协作\t286\n16.1 在提交代码时进行代码评审\t286\n16.2 说服开发人员为他们的API提供文档\t290\n16.3 尽职尽责的监控者\t292\n16.4 接受API的补丁\t297\n第17章 利用竞赛游戏来提升API设计技巧\t300\n17.1 概述\t300\n17.2 第一天\t301\n17.2.1 非public类带来的问题\t304\n17.2.2 不可变性带来的问题\t304\n17.2.3 遗漏实现的问题\t308\n17.2.4 返回结果可能不正确的问题\t309\n17.2.5 第一天的解决方案\t310\n17.3 第二天\t313\n17.3.1 我想修正犯下的错误\t316\n17.3.2 第二天的解决方案\t317\n17.4 第三天：评判日\t320\n17.5 也来玩下这个游戏吧\t327\n第18章 可扩展Visitor模式的案例\t328\n18.1 抽象类\t331\n18.2 为改进做好准备\t333\n18.3 默认的遍历\t334\n18.4 清楚地定义每个版本\t337\n18.5 单向改进\t339\n18.6 使用接口时的数据结构\t340\n18.7 针对用户和开发商的Visitor模式\t341\n18.8 三重调度\t343\n18.9 Visitor模式的圆满结局\t345\n18.10 语法小技巧\t346\n第19章 消亡的过程\t348\n19.1 明确版本的重要性\t349\n19.2 模块依赖的重要性\t349\n19.3 被移除的部分需要永久保留吗\t352\n19.4 分解庞大的API\t352\n第20章 未来\t356\n20.1 原则性内容\t357\n20.2 无绪长存\t358\n20.3 API设计方法论\t360\n20.4 编程语言的演变\t361\n20.5 教育的作用\t363\n20.6 共享\t365\n参考书目\t366","pages":"388","images":{"small":"http:\/\/img5.douban.com\/spic\/s4656028.jpg","large":"http:\/\/img5.douban.com\/lpic\/s4656028.jpg","medium":"http:\/\/img5.douban.com\/mpic\/s4656028.jpg"},"alt":"http:\/\/book.douban.com\/subject\/6003832\/","id":"6003832","publisher":"人民邮电出版社","isbn10":"7115248494","isbn13":"9787115248497","title":"软件框架设计的艺术","url":"http:\/\/api.douban.com\/v2\/book\/6003832","alt_title":"Practical API Design: Confessions of a Java Framework Architect","author_intro":"Jaroslav Tulach  NetBeans的创始人，也是NetBeans项目最初的架构师。有着丰富的项目开发经验，一直致力于如何提高开发人员的设计技巧，从而保证了NetBeans项目的成功。","summary":"本书帮助你解决API 设计方面的问题，共分3 个部分，分别指出学习API 设计是需要进行科学的训练的、Java 语言在设计方面的理论及设计和维护API 时的常见情况，并提供了各种技巧来解决相应的问题。\n本书作者是NetBeans 的创始人，也是NetBeans 项目最初的架构师。相信在API 设计中遇到问题时，本书将不可或缺。\n本书适用于软件设计人员阅读。","price":"75.00元"},{"rating":{"max":10,"numRaters":217,"average":"9.0","min":0},"subtitle":"","author":["Brian Goetz","Tim Peierls","Joshua Bloch","Joseph Bowbeer","David Holmes","Doug Lea"],"pubdate":"2012-2","tags":[{"count":385,"name":"Java","title":"Java"},{"count":307,"name":"并发","title":"并发"},{"count":236,"name":"多线程","title":"多线程"},{"count":88,"name":"编程","title":"编程"},{"count":62,"name":"java","title":"java"},{"count":44,"name":"计算机","title":"计算机"},{"count":29,"name":"线程","title":"线程"},{"count":20,"name":"Programming","title":"Programming"}],"origin_title":"Java Concurrency in Practice","image":"http:\/\/img3.douban.com\/mpic\/s7663093.jpg","binding":"平装","translator":["童云兰"],"catalog":"对本书的赞誉\n译者序\n前　言\n第1章　简介1\n1.1　并发简史1\n1.2　线程的优势2\n1.2.1　发挥多处理器的强大能力2\n1.2.2　建模的简单性3\n1.2.3　异步事件的简化处理3\n1.2.4　响应更灵敏的用户界面4\n1.3　线程带来的风险4\n1.3.1　安全性问题5\n1.3.2　活跃性问题7\n1.3.3　性能问题7\n1.4　线程无处不在7\n第一部分　基础知识\n第2章　线程安全性11\n2.1　什么是线程安全性13\n2.2　原子性14\n2.2.1　竞态条件15\n2.2.2　示例：延迟初始化中的竞态条件16\n2.2.3　复合操作17\n2.3　加锁机制18\n2.3.1　内置锁20\n2.3.2　重入21\n2.4　用锁来保护状态22\n2.5　活跃性与性能23\n第3章　对象的共享27\n3.1　可见性27\n3.1.1　失效数据28\n3.1.2　非原子的64位操作29\n3.1.3　加锁与可见性30\n3.1.4　Volatile变量 30\n3.2　发布与逸出32\n3.3　线程封闭35\n3.3.1　Ad-hoc线程封闭35\n3.3.2　栈封闭36\n3.3.3　ThreadLocal类37\n3.4　不变性38\n3.4.1　Final域39\n3.4.2　示例：使用Volatile类型来发布不可变对象40\n3.5　安全发布41\n3.5.1　不正确的发布：正确的对象被破坏42\n3.5.2 　不可变对象与初始化安全性42\n3.5.3　安全发布的常用模式43\n3.5.4　事实不可变对象44\n3.5.5　可变对象44\n3.5.6　安全地共享对象44\n第4章　对象的组合46\n4.1　设计线程安全的类46\n4.1.1　收集同步需求47\n4.1.2　依赖状态的操作48\n4.1.3　状态的所有权48\n4.2　实例封闭49\n4.2.1　Java监视器模式51\n4.2.2　示例：车辆追踪51\n4.3　线程安全性的委托53\n4.3.1　示例：基于委托的车辆追踪器54\n4.3.2　独立的状态变量55\n4.3.3　当委托失效时56\n4.3.4　发布底层的状态变量57\n4.3.5　示例：发布状态的车辆追踪器58\n4.4　在现有的线程安全类中添加功能59\n4.4.1　客户端加锁机制60\n4.4.2　组合62\n4.5　将同步策略文档化62\n第5章　基础构建模块66\n5.1　同步容器类66\n5.1.1　同步容器类的问题66\n5.1.2　迭代器与Concurrent-ModificationException68\n5.1.3　隐藏迭代器69\n5.2　并发容器70\n5.2.1　ConcurrentHashMap71\n5.2.2　额外的原子Map操作72\n5.2.3　CopyOnWriteArrayList72\n5.3　阻塞队列和生产者-消费者模式73\n5.3.1　示例：桌面搜索75\n5.3.2　串行线程封闭76\n5.3.3　双端队列与工作密取77\n5.4　阻塞方法与中断方法77\n5.5　同步工具类78\n5.5.1　闭锁79\n5.5.2　FutureTask80\n5.5.3　信号量82\n5.5.4　栅栏83\n5.6　构建高效且可伸缩的结果缓存85\n第二部分　结构化并发应用程序\n第6章　任务执行93\n6.1　在线程中执行任务93\n6.1.1　串行地执行任务94\n6.1.2　显式地为任务创建线程94\n6.1.3　无限制创建线程的不足95\n6.2　Executor框架96\n6.2.1　示例：基于Executor的Web服务器97\n6.2.2　执行策略98\n6.2.3　线程池98\n6.2.4　Executor的生命周期99\n6.2.5　延迟任务与周期任务101\n6.3　找出可利用的并行性102\n6.3.1　示例：串行的页面渲染器102\n6.3.2　携带结果的任务Callable与Future103\n6.3.3　示例：使用Future实现页面渲染器104\n6.3.4　在异构任务并行化中存在的局限106\n6.3.5　CompletionService:Executor与BlockingQueue106\n6.3.6　示例：使用CompletionService实现页面渲染器107\n6.3.7　为任务设置时限108\n6.3.8　示例：旅行预定门户网站109\n第7章　取消与关闭111\n7.1　任务取消111\n7.1.1　中断113\n7.1.2　中断策略116\n7.1.3　响应中断117\n7.1.4　示例：计时运行118\n7.1.5　通过Future来实现取消120\n7.1.6　处理不可中断的阻塞121\n7.1.7　采用newTaskFor来封装非标准的取消122\n7.2　停止基于线程的服务124\n7.2.1　示例：日志服务124\n7.2.2　关闭ExecutorService127\n7.2.3　“毒丸”对象128\n7.2.4　示例：只执行一次的服务129\n7.2.5　shutdownNow的局限性130\n7.3　处理非正常的线程终止132\n7.4　JVM关闭135\n7.4.1　关闭钩子135\n7.4.2　守护线程136\n7.4.3　终结器136\n第8章　线程池的使用138\n8.1　在任务与执行策略之间的隐性耦合138\n8.1.1　线程饥饿死锁139\n8.1.2　运行时间较长的任务140\n8.2　设置线程池的大小140\n8.3　配置ThreadPoolExecutor141\n8.3.1　线程的创建与销毁142\n8.3.2　管理队列任务142\n8.3.3　饱和策略144\n8.3.4　线程工厂146\n8.3.5　在调用构造函数后再定制ThreadPoolExecutor147\n8.4　扩展 ThreadPoolExecutor148\n8.5　递归算法的并行化149\n第9章　图形用户界面应用程序156\n9.1　为什么GUI是单线程的156\n9.1.1　串行事件处理157\n9.1.2　Swing中的线程封闭机制158\n9.2　短时间的GUI任务160\n9.3　长时间的GUI任务161\n9.3.1　取消162\n9.3.2　进度标识和完成标识163\n9.3.3　SwingWorker165\n9.4　共享数据模型165\n9.4.1　线程安全的数据模型166\n9.4.2　分解数据模型166\n9.5　其他形式的单线程子系统167\n第三部分　活跃性、性能与测试\n第10章　避免活跃性危险169\n10.1　死锁169\n10.1.1　锁顺序死锁170\n10.1.2　动态的锁顺序死锁171\n10.1.3　在协作对象之间发生的死锁174\n10.1.4　开放调用175\n10.1.5　资源死锁177\n10.2　死锁的避免与诊断178\n10.2.1　支持定时的锁178\n10.2.2　通过线程转储信息来分析死锁178\n10.3　其他活跃性危险180\n10.3.1　饥饿180\n10.3.2　糟糕的响应性181\n10.3.3　活锁181\n第11章　性能与可伸缩性183\n11.1　对性能的思考183\n11.1.1　性能与可伸缩性184\n11.1.2　评估各种性能权衡因素185\n11.2　Amdahl定律186\n11.2.1　示例：在各种框架中隐藏的串行部分188\n11.2.2　Amdahl定律的应用189\n11.3　线程引入的开销189\n11.3.1　上下文切换190\n11.3.2　内存同步190\n11.3.3　阻塞192\n11.4　减少锁的竞争192\n11.4.1　缩小锁的范围（“快进快出”）193\n11.4.2　减小锁的粒度195\n11.4.3　锁分段196\n11.4.4　避免热点域197\n11.4.5　一些替代独占锁的方法198\n11.4.6　监测CPU的利用率199\n11.4.7　向对象池说“不”200\n11.5　示例：比较Map的性能200\n11.6　减少上下文切换的开销201\n第12章　并发程序的测试204\n12.1　正确性测试205\n12.1.1　基本的单元测试206\n12.1.2　对阻塞操作的测试207\n12.1.3　安全性测试208\n12.1.4　资源管理的测试212\n12.1.5　使用回调213\n12.1.6　产生更多的交替操作214\n12.2　性能测试215\n12.2.1　在PutTakeTest中增加计时功能215\n12.2.2　多种算法的比较217\n12.2.3　响应性衡量218\n12.3　避免性能测试的陷阱220\n12.3.1　垃圾回收220\n12.3.2　动态编译220\n12.3.3　对代码路径的不真实采样222\n12.3.4　不真实的竞争程度222\n12.3.5　无用代码的消除223\n12.4　其他的测试方法224\n12.4.1　代码审查224\n12.4.2　静态分析工具224\n12.4.3　面向方面的测试技术226\n12.4.4　分析与监测工具226\n第四部分　高级主题\n第13章　显式锁227\n13.1　Lock与 ReentrantLock227\n13.1.1　轮询锁与定时锁228\n13.1.2　可中断的锁获取操作230\n13.1.3　非块结构的加锁231\n13.2　性能考虑因素231\n13.3　公平性232\n13.4　在synchronized和ReentrantLock之间进行选择234\n13.5　读-写锁235\n第14章　构建自定义的同步工具238\n14.1　状态依赖性的管理238\n14.1.1　示例：将前提条件的失败传递给调用者240\n14.1.2　示例：通过轮询与休眠来实现简单的阻塞241\n14.1.3　条件队列243\n14.2　使用条件队列244\n14.2.1　条件谓词244\n14.2.2　过早唤醒245\n14.2.3　丢失的信号246\n14.2.4　通知247\n14.2.5　示例：阀门类248\n14.2.6　子类的安全问题249\n14.2.7　封装条件队列250\n14.2.8　入口协议与出口协议250\n14.3　显式的Condition对象251\n14.4　Synchronizer剖析253\n14.5　AbstractQueuedSynchronizer254\n14.6　java.util.concurrent同步器类中的 AQS257\n14.6.1　ReentrantLock257\n14.6.2　Semaphore与CountDownLatch258\n14.6.3　FutureTask259\n14.6.4　ReentrantReadWriteLock259\n第15章　原子变量与非阻塞同步机制261\n15.1　锁的劣势261\n15.2　硬件对并发的支持262\n15.2.1　比较并交换263\n15.2.2　非阻塞的计数器264\n15.2.3　JVM对CAS的支持265\n15.3　原子变量类265\n15.3.1　原子变量是一种“更好的volatile”266\n15.3.2　性能比较：锁与原子变量267\n15.4　非阻塞算法270\n15.4.1　非阻塞的栈270\n15.4.2　非阻塞的链表272\n15.4.3　原子的域更新器274\n15.4.4　ABA问题275\n第16章　Java内存模型277\n16.1　什么是内存模型，为什么需要它277\n16.1.1　平台的内存模型278\n16.1.2　重排序278\n16.1.3　Java内存模型简介280\n16.1.4　借助同步281\n16.2　发布283\n16.2.1　不安全的发布283\n16.2.2　安全的发布284\n16.2.3　安全初始化模式284\n16.2.4　双重检查加锁286\n16.3　初始化过程中的安全性287\n附录A　并发性标注289\n参考文献291","pages":"293","images":{"small":"http:\/\/img3.douban.com\/spic\/s7663093.jpg","large":"http:\/\/img3.douban.com\/lpic\/s7663093.jpg","medium":"http:\/\/img3.douban.com\/mpic\/s7663093.jpg"},"alt":"http:\/\/book.douban.com\/subject\/10484692\/","id":"10484692","publisher":"机械工业出版社华章公司","isbn10":"711137004X","isbn13":"9787111370048","title":"Java并发编程实战","url":"http:\/\/api.douban.com\/v2\/book\/10484692","alt_title":"Java Concurrency in Practice","author_intro":"本书作者都是Java Community Process JSR 166专家组（并发工具）的主要成员，并在其他很多JCP专家组里任职。Brian Goetz有20多年的软件咨询行业经验，并著有至少75篇关于Java开发的文章。Tim Peierls是“现代多处理器”的典范，他在BoxPop.biz、唱片艺术和戏剧表演方面也颇有研究。Joseph Bowbeer是一个Java ME专家，他对并发编程的兴趣始于Apollo计算机时代。David Holmes是《The Java Programming Language》一书的合著者，任职于Sun公司。Joshua Bloch是Google公司的首席Java架构师，《Effective Java》一书的作者，并参与著作了《Java Puzzlers》。Doug Lea是《Concurrent Programming》一书的作者，纽约州立大学 Oswego分校的计算机科学教授。","summary":"本书深入浅出地介绍了Java线程和并发，是一本完美的Java并发参考手册。书中从并发性和线程安全性的基本概念出发，介绍了如何使用类库提供的基本并发构建块，用于避免并发危险、构造线程安全的类及验证线程安全的规则，如何将小的线程安全类组合成更大的线程安全类，如何利用线程来提高并发应用程序的吞吐量，如何识别可并行执行的任务，如何提高单线程子系统的响应性，如何确保并发程序执行预期任务，如何提高并发代码的性能和可伸缩性等内容，最后介绍了一些高级主题，如显式锁、原子变量、非阻塞算法以及如何开发自定义的同步工具类。\n本书适合Java程序开发人员阅读。","price":"69.00元"},{"rating":{"max":10,"numRaters":141,"average":"7.8","min":0},"subtitle":"Java虚拟机多核编程实战","author":["[美]Venkat Subramaniam"],"pubdate":"2010-8","tags":[{"count":168,"name":"scala","title":"scala"},{"count":65,"name":"Java","title":"Java"},{"count":59,"name":"函数式编程","title":"函数式编程"},{"count":46,"name":"多核编程","title":"多核编程"},{"count":34,"name":"编程","title":"编程"},{"count":29,"name":"编程语言","title":"编程语言"},{"count":27,"name":"程序设计","title":"程序设计"},{"count":26,"name":"Programming","title":"Programming"}],"origin_title":"Programming Scala: Tackle Multi-Core Complexity on the Java Virtual Machine","image":"http:\/\/img5.douban.com\/mpic\/s4911906.jpg","binding":"","translator":["郑晔","李剑"],"catalog":"第1章 简介\t1\n1.1 为何选择Scala\t1\n1.2 何为Scala\t3\n1.3 函数式编程\t7\n1.4 本书的内容\t9\n1.5 本书面向的读者\t11\n1.6 致谢\t11\n第2章 起步\t13\n2.1 下载Scala\t13\n2.2 安装Scala\t13\n2.2.1 在Windows上安装Scala\t14\n2.2.2 在类UNIX系统上安装Scala\t14\n2.3 让Scala跑起来\t15\n2.4 命令行上的Scala\t16\n2.5 把Scala代码当作脚本运行\t17\n2.5.1 在类UNIX系统上作为脚本运行\t17\n2.5.2 在Windows上作为脚本运行\t18\n2.6 在IDE里面运行Scala\t18\n2.7 编译Scala\t19\n第3章 Scala步入正轨\t20\n3.1 把Scala当作简洁的Java\t20\n3.2 Java基本类型对应的Scala类\t23\n3.3 元组与多重赋值\t23\n3.4 字符串与多行原始字符串\t25\n3.5 自适应的默认做法\t26\n3.6 运算符重载\t27\n3.7 Scala带给Java程序员的惊奇\t29\n3.7.1 赋值的结果\t29\n3.7.2 Scala的==\t30\n3.7.3 分号是半可选的\t31\n3.7.4 默认的访问修饰符\t32\n3.7.5 默认的访问修饰符以及如何修改\t32\n3.7.6 Scala的Protected\t33\n3.7.7 细粒度访问控制\t34\n3.7.8 避免显式return\t35\n第4章 Scala的类\t37\n4.1 创建类\t37\n4.2 定义字段、方法和构造函数\t38\n4.3 类继承\t41\n4.4 单例对象\t42\n4.5 独立对象和伴生对象\t43\n4.6 Scala中的static\t44\n第5章 自适应类型\t46\n5.1 容器和类型推演\t47\n5.2 Any类型\t49\n5.3 关于Nothing的更多情况\t50\n5.4 Option类型\t50\n5.5 方法返回类型推演\t51\n5.6 传递变参\t52\n5.7 参数化类型的可变性\t53\n第6章 函数值和闭包\t57\n6.1 从普通函数迈向高阶函数\t57\n6.2 函数值\t58\n6.3 具有多参数的函数值\t59\n6.4 Curry化\t61\n6.5 重用函数值\t62\n6.6 参数的位置记法\t64\n6.7 Execute Around Method模式\t65\n6.8 偏应用函数\t67\n6.9 闭包\t68\n第7章 Trait和类型转换\t70\n7.1 Trait\t70\n7.2 选择性混入\t72\n7.3 以trait进行装饰\t74\n7.4 Trait方法的延迟绑定\t75\n7.5 隐式类型转换\t77\n第8章 使用容器\t81\n8.1 常见的Scala容器\t81\n8.2 使用Set\t82\n8.3 使用Map\t83\n8.4 使用List\t85\n8.5 for表达式\t90\n第9章 模式匹配和正则表达式\t93\n9.1 匹配字面量和常量\t93\n9.2 匹配通配符\t94\n9.3 匹配元组和列表\t94\n9.4 类型和卫述句的匹配\t96\n9.5 case表达式里的模式变量和常量\t96\n9.6 对XML片段进行模式匹配\t98\n9.7 使用case类进行模式匹配\t98\n9.8 使用提取器进行匹配\t100\n9.9 正则表达式\t103\n9.10 把正则表达式当做提取器\t104\n第10章 并发编程\t106\n10.1 促进不变性\t106\n10.2 使用Actor的并发\t107\n10.3 消息传递\t110\n10.4 Actor类\t113\n10.5 actor方法\t115\n10.6 receive和receiveWithin方法\t117\n10.7 react和reactWithin方法\t120\n10.8 loop和loopWhile\t124\n10.9 控制线程执行\t125\n10.10 在各种接收方法中选择\t127\n第11章 与Java互操作\t128\n11.1 在Scala里使用Scala类\t128\n11.2 在Scala里使用Java类\t130\n11.3 在Java里使用Scala类\t132\n11.3.1 有普通函数和高阶函数的Scala类\t132\n11.3.2 同trait一起工作\t134\n11.3.3 单例对象和伴生对象\t134\n11.4 继承类\t136\n第12章 用Scala做单元测试\t138\n12.1 使用JUnit\t138\n12.2 使用ScalaTest\t139\n12.3 以Canary测试开始\t140\n12.4 使用Runner\t140\n12.5 Asserts\t142\n12.6 异常测试\t144\n12.7 在测试间共享代码\t146\n12.7.1 用BeforeAndAfter共享代码\t146\n12.7.2 用闭包共享代码\t147\n12.8 FunSuite的函数式风格\t148\n12.9 用JUnit运行ScalaTest\t149\n第13章 异常处理\t152\n13.1 异常处理\t152\n13.2 注意catch顺序\t154\n第14章 使用Scala\t156\n14.1 净资产应用实例\t156\n14.2 获取用户输入\t156\n14.3 读写文件\t157\n14.4 XML，作为一等公民\t159\n14.5 读写XML\t161\n14.6 从Web获取股票价格\t164\n14.7 让净资产应用并发\t167\n14.8 为净资产应用增加GUI\t168\n附录A Web资源\t178","ebook_url":"http:\/\/read.douban.com\/ebook\/2112127\/","pages":"180","images":{"small":"http:\/\/img5.douban.com\/spic\/s4911906.jpg","large":"http:\/\/img5.douban.com\/lpic\/s4911906.jpg","medium":"http:\/\/img5.douban.com\/mpic\/s4911906.jpg"},"alt":"http:\/\/book.douban.com\/subject\/4909629\/","id":"4909629","publisher":"人民邮电出版社","isbn10":"7115232954","isbn13":"9787115232953","title":"Scala程序设计","url":"http:\/\/api.douban.com\/v2\/book\/4909629","alt_title":"Programming Scala: Tackle Multi-Core Complexity on the Java Virtual Machine","author_intro":"Venkat Subramaniam，Agile Developer创办人，培训并指导了美国、加拿大、印度和欧洲多国的上千名软件开发人员，并多次应邀在各种大会上发表演讲。他是《高效程序员的45个习惯：敏捷开发修炼之道》（2007年Jolt大奖作品）的第一作者，还著有.NET Gotchas（O’Reilly）、Programming Groovy（Pragmatic）等书。","summary":"Scala是一种针对 JVM 的通用的编程语言，用来以简明、优雅、类型安全的方式表示常见的编程模式。它无缝集成了面向对象语言和函数式语言的特性，可以大大提高JAVA程序员的编程效率。Twitter、SAP等知名企业已经开始在一些应用里使用Scala，很多新的程序员也开始学习它。\n本书循序渐进地介绍了Scala的函数式编程基础，虽然篇幅短小，却切中要害。读者可以学会使用Scala静态语言的强大功能创建简洁、可扩展、高度可并行的代码。对于多核时代JVM上的并发编程，Scala是绝好的工具，而本书是你必不可少的向导。","ebook_price":"18.00","price":"39.00"},{"rating":{"max":10,"numRaters":86,"average":"8.6","min":0},"subtitle":"基础篇 (原书第8版)","author":["（美）  Y. Daniel Liang"],"pubdate":"2011-6","tags":[{"count":101,"name":"Java语言程序设计","title":"Java语言程序设计"},{"count":84,"name":"Java","title":"Java"},{"count":27,"name":"计算机\/编程","title":"计算机\/编程"},{"count":25,"name":"程序设计","title":"程序设计"},{"count":20,"name":"java","title":"java"},{"count":20,"name":"java编程","title":"java编程"},{"count":20,"name":"编程","title":"编程"},{"count":17,"name":"计算机","title":"计算机"}],"origin_title":"Introduction to Java Programming, Eighth Edition","image":"http:\/\/img5.douban.com\/mpic\/s6520557.jpg","binding":"","translator":["李娜"],"catalog":"出版者的话\n译者序\n前言\n第1章   计算机、程序和Java概述\t1\n1.1   引言\t1\n1.2   什么是计算机\t1\n1.2.1   中央处理器\t2\n1.2.2   内存\t2\n1.2.3   存储设备\t3\n1.2.4   输入和输出设备\t3\n1.2.5   通信设备\t4\n1.3   程序\t4\n1.4   操作系统\t5\n1.4.1   控制和监视系统的活动\t6\n1.4.2   分配和调遣系统资源\t6\n1.4.3   安排操作的顺序\t6\n1.5   Java、万维网以及其他\t6\n1.6   Java语言规范、API、JDK和IDE\t8\n1.7   一个简单的Java程序\t8\n1.8   创建、编译和执行Java程序\t10\n1.9   （GUI）在消息对话框中显示文本\t12\n关键术语\t14\n本章小结\t15\n复习题\t15\n编程练习题\t17\n第2章   基本程序设计\t18\n2.1   引言\t18\n2.2   编写简单的程序\t18\n2.3   从控制台读取输入\t21\n2.4   标识符\t22\n2.5   变量\t23\n2.6   赋值语句和赋值表达式\t24\n2.7   定名常量\t24\n2.8   数值数据类型及其运算\t25\n2.8.1   数值运算符\t26\n2.8.2   数值直接量\t27\n2.8.3   计算Java表达式\t28\n2.9   问题：显示当前时间\t29\n2.10   简捷运算符\t31\n2.11   数值类型转换\t32\n2.12   问题：计算贷款支付额\t33\n2.13   字符数据类型及运算\t35\n2.13.1   统一码和ASCII码\t35\n2.13.2   特殊字符的转义序列\t36\n2.13.3   字符型char数据与数值型数据\n之间的转换\t37\n2.14  问题：整钱兑零\t37\n2.15   String类型\t39\n2.16   程序设计风格和文档\t41\n2.16.1   适当的注释和注释风格\t41\n2.16.2   命名习惯\t41\n2.16.3   适当的缩进和空白\t41\n2.16.4   块的风格\t42\n2.17   程序设计错误\t42\n2.17.1   语法错误\t42\n2.17.2   运行错误\t43\n2.17.3   逻辑错误\t43\n2.17.4   调试\t43\n2.18   （GUI）从输入对话框获取输入\t44\n2.18.1   将字符串转换为数字\t44\n2.18.2   使用输入对话框\t44\n关键术语\t46\n本章小结\t46\n复习题\t47\n编程练习题\t50\n第3章   选择\t55\n3.1   引言\t55\n3.2   boolean数据类型\t55\n3.3   问题：一个简单的数学学习工具\t56\n3.4   if语句 \t57\n3.5   问题：猜生日\t58\n3.6   双向if语句\t61\n3.7  嵌套的if语句\t62\n3.8   选择语句中的常见错误\t63\n3.9   问题：一个改进的数学学习工具\t64\n3.10   问题：计算身体质量指数\t66\n3.11   问题：计算税款\t67\n3.12   逻辑运算符\t69\n3.13   问题：判定闰年\t71\n3.14   问题：彩票\t72\n3.15   switch语句\t74\n3.16   条件表达式\t75\n3.17   格式化控制台输出\t76\n3.18   运算符的优先级和结合方向\t77\n3.19   （GUI）确认对话框\t78\n关键术语\t80\n本章小结\t80\n复习题\t80\n编程练习题\t84\n第4章   循环\t90\n4.1   引言\t90\n4.2   while循环\t91\n4.2.1   举例：猜数字\t92\n4.2.2   循环设计策略\t94\n4.2.3   问题：高级数学学习工具\t94\n4.2.4   使用标志值控制循环\t96\n4.2.5   输入和输出重定向\t97\n4.3   do-while循环\t98\n4.4   for循环\t99\n4.5   采用哪种循环\t100\n4.6   嵌套循环\t101\n4.7   最小化数值误差\t102\n4.8   实例学习\t103\n4.8.1   举例：求最大公约数\t104\n4.8.2   问题：预测未来学费\t105\n4.8.3   问题：蒙特卡罗模拟\t105\n4.9   关键字break和continue\t106\n4.10   （GUI）使用确认对话框控制循环\t110\n关键术语\t111\n本章小结\t111\n复习题\t112\n编程练习题\t116\n第5章   方法\t123\n5.1   引言\t123\n5.2   定义方法\t124\n5.3   调用方法\t125\n5.4   void方法举例\t127\n5.5   参数的值传递\t129\n5.6   模块化代码\t130\n5.7   问题：将十进制数转换为十六进制数\t132\n5.8   重载方法\t134\n5.9   变量的作用域\t136\n5.10   Math数学类\t136\n5.10.1   三角函数方法\t137\n5.10.2   指数函数方法\t137\n5.10.3   取整方法\t138\n5.10.4   min、max和abs方法\t138\n5.10.5   random方法\t139\n5.11   实例学习：生成随机字符\t139\n5.12   方法抽象和逐步求精\t141\n5.12.1   自顶向下的设计\t141\n5.12.2   自顶向下和自底向上的实现\t143\n5.12.3   实现细节\t144\n关键术语\t146\n本章小结\t147\n复习题\t147\n编程练习题\t150\n第6章   一维数组\t157\n6.1   引言\t157\n6.2   数组的基本知识\t158\n6.2.1   声明数组变量\t158\n6.2.2   创建数组\t158\n6.2.3   数组大小和默认值\t159\n6.2.4   数组下标变量\t159\n6.2.5   数组初始化语法\t160\n6.2.6   处理数组\t160\n6.2.7   for-each循环\t161\n6.3   问题：乐透号码\t162\n6.4   问题：一副牌\t164\n6.5   数组的复制\t166\n6.6   给方法传递数组\t167\n6.7   从方法中返回数组\t169\n6.8   可变长参数列表\t172\n6.9   数组的查找\t172\n6.9.1   线性查找法\t173\n6.9.2   二分查找法\t173\n6.10   数组的排序\t175\n6.10.1   选择排序\t175\n6.10.2   插入排序\t177\n6.11   Arrays类\t178\n关键术语\t179\n本章小结\t179\n复习题\t180\n编程练习题\t182\n第7章   多维数组\t188\n7.1   引言\t188\n7.2   二维数组的基础知识\t188\n7.2.1   声明二维数组变量并创建\n二维数组\t188\n7.2.2   获取二维数组的长度\t189\n7.2.3   锯齿数组\t190\n7.3   处理二维数组\t190\n7.4   给方法传递二维数组\t192\n7.5   问题：多选题测验评分\t192\n7.6   问题：找出距离最近的点对\t194\n7.7   问题：九宫格\t195\n7.8   多维数组\t198\n7.8.1   问题：每日温度和湿度\t199\n7.8.2   问题：猜生日\t200\n本章小结\t201\n复习题\t201\n编程练习题\t202\n第8章   对象和类\t210\n8.1   引言\t210\n8.2   定义对象的类\t210\n8.3   举例：定义类和创建对象\t212\n8.4   使用构造方法构造对象\t216\n8.5   通过引用变量访问对象\t216\n8.5.1   引用变量和引用类型\t216\n8.5.2   访问对象的数据和方法\t217\n8.5.3   引用数据域和null值\t217\n8.5.4   基本类型变量和引用类型\n变量的区别\t218\n8.6   使用Java库中的类\t219\n8.6.1   Date类\t219\n8.6.2   Random类\t219\n8.6.3   显示GUI组件\t220\n8.7   静态变量、常量和方法\t222\n8.8   可见性修饰符\t225\n8.9   数据域封装\t227\n8.10   给方法传递对象参数\t229\n8.11   对象数组\t230\n关键术语\t232\n本章小结\t232\n复习题\t233\n编程练习题\t237\n第9章   字符串和文本I\/O\t241\n9.1   引言\t241\n9.2   字符串类String\t241\n9.2.1   构造一个字符串\t241\n9.2.2   不可变字符串与限定字符串\t242\n9.2.3   字符串的比较\t242\n9.2.4   字符串长度、字符以及组合\n字符串\t243\n9.2.5   获取子串\t244\n9.2.6   字符串的转换、替换和分隔\t245\n9.2.7   依照模式匹配、替换和分隔\t246\n9.2.8   找出字符串中的某个字符或者\n某个子串\t246\n9.2.9   字符串与数组之间的转换\t247\n9.2.10   将字符和数值转换成字符串\t247\n9.2.11   格式化字符串\t248\n9.2.12   问题：检测回文串\t248\n9.2.13   问题：将十六进制转换为十进制\t249\n9.3   字符类Character\t250\n9.4   StringBuilder\/StringBuffer类\t252\n9.4.1   修改StringBuilder中的字符串\t253\n9.4.2   toString、capacity、length、setLength和charAt方法\t254\n9.4.3   问题：忽略既非字母又非数字的\n字符，判断回文串\t255\n9.5   命令行参数\t256\n9.5.1   向main方法传递字符串\t257\n9.5.2   问题：计算器\t257\n9.6   文件类File\t258\n9.7   文件输入和输出\t260\n9.7.1   使用PrintWriter写数据\t261\n9.7.2   使用Scanner读数据\t262\n9.7.3   Scanner如何工作\t263\n9.7.4   问题：替换文本\t263\n9.8   （GUI）文件对话框\t264\n本章小结\t265\n复习题\t266\n编程练习题\t270\n第10章   关于对象的思考\t276\n10.1   引言\t276\n10.2   不可变对象和类\t276\n10.3   变量的作用域\t277\n10.4   this引用\t278\n10.5   类的抽象和封装\t279\n10.6   面向对象的思考\t282\n10.7   对象的组合\t284\n10.8   设计类Course\t286\n10.9   设计堆栈类\t287\n10.10   设计GuessDate类\t290\n10.11   类的设计原则\t292\n10.11.1   内聚性\t292\n10.11.2   一致性\t292\n10.11.3   封装性\t292\n10.11.4   清晰性\t292\n10.11.5   完整性\t293\n10.11.6   实例和静态\t293\n关键术语\t293\n本章小结\t294\n复习题\t294\n编程练习题\t295\n第11章   继承和多态\t301\n11.1   引言\t301\n11.2   父类和子类\t301\n11.3   使用super关键字\t306\n11.3.1   调用父类的构造方法\t306\n11.3.2   构造方法链\t307\n11.3.3   调用父类的方法\t308\n11.4   覆盖方法\t309\n11.5   覆盖和重载\t309\n11.6   对象类Object和它的toString()\n方法\t310\n11.7   多态\t310\n11.8   动态绑定\t311\n11.9   对象转换和instanceof运算符\t312\n11.10   Object的equals方法\t314\n11.11   数组线性表ArrayList类\t315\n11.12   自定义栈类\t318\n11.13   protected数据和方法\t319\n11.14   防止扩展和覆盖\t320\n关键术语\t320\n本章小结\t321\n复习题\t321\n编程练习题\t326\n第12章   图形用户界面基础\t328\n12.1   引言\t328\n12.2   Swing和AWT \t328\n12.3   Java GUI API\t329\n12.3.1   组件类\t329\n12.3.2   容器类\t329\n12.3.3   GUI辅助类\t330\n12.4   框架\t330\n12.4.1   创建一个框架\t330\n12.4.2   向框架中添加组件\t331\n12.5   布局管理器\t332\n12.5.1   FlowLayout\t333\n12.5.2   GridLayout\t334\n12.5.3   BorderLayout\t336\n12.5.4   布局管理器的属性\t337\n12.6   使用面板作为子容器\t337\n12.7   Color类\t339\n12.8   Font类\t339\n12.9   Swing GUI组件的公共特性\t340\n12.10   图像图标\t342\n关键术语\t343\n本章小结\t343\n复习题\t344\n编程练习题\t346\n第13章   异常处理\t348\n13.1   引言\t348\n13.2   异常处理概述\t348\n13.3   异常处理的优势\t351\n13.4   异常类型\t353\n13.5   关于异常处理的更多知识\t354\n13.5.1   声明异常\t355\n13.5.2   抛出异常\t355\n13.5.3   捕获异常\t355\n13.5.4   从异常中获取信息\t357\n13.5.5   举例：声明、抛出和捕获异常\t358\n13.6   finally子句\t360\n13.7   何时使用异常\t361\n13.8   重新抛出异常\t361\n13.9   链式异常\t362\n13.10   创建自定制异常类\t362\n关键术语\t364\n本章小结\t364\n复习题\t364\n编程练习题\t368\n第14章   抽象类和接口\t370\n14.1   引言\t370\n14.2   抽象类\t370\n14.2.1   为什么要用抽象方法\t372\n14.2.2   关于抽象类的几个关注点\t374\n14.3   举例：日历类Calendar和公历类GregorianCalendar\t374\n14.4   接口\t376\n14.5   举例：Comparable接口\t378\n14.6   举例：ActionListener接口\t380\n14.7   举例：Cloneable接口\t381\n14.8   接口与抽象类\t384\n14.9   将基本数据类型值作为对象处理\t386\n14.10   举例：对一个对象数组排序\t388\n14.11   基本类型和包装类类型之间的\n自动转换\t390\n14.12   BigInteger和BigDecimal类\t390\n14.13   实例学习：Rational类\t391\n关键术语\t395\n本章小结\t395\n复习题\t396\n编程练习题\t399\n第15章   图形\t402\n15.1   引言\t402\n15.2   图形坐标系\t402\n15.3   Graphics类\t403\n15.4   绘制字符串、直线、矩形和椭圆\t405\n15.5   实例学习：FigurePanel类\t406\n15.6   绘制弧形\t409\n15.7   绘制多边形和折线段\t410\n15.8   使用FontMetrics类居中显示\n字符串\t413\n15.9   实例学习：MessagePanel类\t414\n15.10   实例学习：StillClock类\t418\n15.11   显示图像\t422\n15.12   实例学习：ImageViewer类\t423\n本章小结\t425\n复习题\t426\n编程练习题\t427\n第16章   事件驱动程序设计\t432\n16.1   引言\t432\n16.2   事件和事件源\t432\n16.3   监听器、注册以及处理事件\t434\n16.4   内部类\t438\n16.5   匿名类监听器\t439\n16.6   定义监听器类的另一种方式\t441\n16.7   问题：贷款计算器\t443\n16.8   窗口事件\t444\n16.9   监听器接口适配器\t446\n16.10   鼠标事件\t447\n16.11   按键事件\t449\n16.12   使用Timer类的动画\t451\n关键术语\t454\n本章小结\t454\n复习题\t455\n编程练习题\t456\n第17章   创建图形用户界面\t462\n17.1   引言\t462\n17.2   按钮\t463\n17.2.1   图标、按下图标和翻转图标\t463\n17.2.2   对齐方式\t464\n17.2.3   文本位置\t465\n17.2.4   使用按钮\t465\n17.3   复选框\t467\n17.4   单选按钮\t470\n17.5   标签\t472\n17.6   文本域\t473\n17.7   文本区域\t475\n17.8   组合框\t478\n17.9   列表框\t481\n17.10   滚动条\t484\n17.11   滑块\t486\n17.12   创建多个窗口\t489\n本章小结\t492\n复习题\t492\n编程练习题\t493\n第18章   applet和多媒体\t498\n18.1   引言\t498\n18.2   开发applet\t499\n18.3   HTML文件和标记\t499\n18.3.1   从Web浏览器查看applet\t501\n18.3.2   使用applet查看器工具查看applet\t501\n18.4   applet安全限制\t501\n18.5   让applet像应用程序一样运行\t502\n18.6   applet生命周期方法\t503\n18.6.1   init方法\t503\n18.6.2   start方法\t503\n18.6.3   stop方法\t503\n18.6.4   destroy方法\t503\n18.7   给applet传递字符串\t504\n18.8   实例学习：弹跳的小球\t507\n18.9   实例学习：井字游戏\t510\n18.10   使用URL类定位资源\t513\n18.11   在任意Java程序中播放音频\t515\n18.12   实例学习：多媒体动画\t516\n关键术语\t518\n本章小结\t518\n复习题\t519\n编程练习题\t520\n第19章   二进制I\/O\t527\n19.1   引言\t527\n19.2   在Java中如何处理输入\/输出\t527\n19.3   文本I\/O与二进制I\/O\t528\n19.4   二进制I\/O类\t529\n19.4.1   FileInputStream类和FileOutputStream类\t530\n19.4.2   FilterInputStream类和FilterOutputStream类\t532\n19.4.3   DataInputStream类和DataOutputStream类\t532\n19.4.4   BufferedInputStream类和BufferedOutputStream类\t535\n19.5   问题：复制文件\t536\n19.6   对象的输入\/输出\t537\n19.6.1   可序列化接口Serializable\t539\n19.6.2   序列化数组\t540\n19.7   随机访问文件\t541\n关键术语\t544\n本章小结\t544\n复习题\t544\n编程练习题\t547\n第20章   递归\t550\n20.1   引言\t550\n20.2   问题：计算阶乘\t550\n20.3   问题：计算斐波那契数\t553\n20.4   使用递归解决问题\t554\n20.5   递归的辅助方法\t556\n20.5.1   选择排序\t556\n20.5.2   二分查找\t557\n20.6   问题：求出目录的大小\t558\n20.7   问题：汉诺塔\t559\n20.8   问题：分形\t562\n20.9   问题：八皇后\t564\n20.10   递归与迭代\t567\n20.11   尾递归\t567\n关键术语\t568\n本章小结\t568\n复习题\t568\n编程练习题\t569\n附录A   Java关键字\t575\n附录B   ASCII码字符集\t576\n附录C   运算符优先级表\t577\n附录D   Java修饰符\t578\n附录E   特殊浮点值\t579\n附录F   数系\t580","pages":"604","images":{"small":"http:\/\/img5.douban.com\/spic\/s6520557.jpg","large":"http:\/\/img5.douban.com\/lpic\/s6520557.jpg","medium":"http:\/\/img5.douban.com\/mpic\/s6520557.jpg"},"alt":"http:\/\/book.douban.com\/subject\/6529833\/","id":"6529833","publisher":"机械工业出版社","isbn10":"7111340817","isbn13":"9787111340812","title":"Java语言程序设计","url":"http:\/\/api.douban.com\/v2\/book\/6529833","alt_title":"Introduction to Java Programming, Eighth Edition","author_intro":"Y.Daniel Liang 普度大学终身教授，阿姆斯特朗亚特兰大州立大学计算机科学系教授。他所编写的Java教程在美国大学Java课程中采用率极高，同时他还兼任Prentice Hall Java系列丛书的编辑。","summary":"本书是Java语言的经典教材，多年来畅销不衰。本书全面整合了Java 6的特性，采用“基础优先，问题驱动”的教学方式，循序渐进地介绍了程序设计基础、解决问题的方法、面向对象程序设计、图形用户界面设计、异常处理、I\/O和递归等内容。此外，本书还全面且深入地覆盖了一些高级主题，包括算法和数据结构、多线程、网络、国际化、高级GUI等内容。\n本书中文版由《Java语言程序设计：基础篇》和《Java语言程序设计：进阶篇》组成。基础篇对应原书的第1～20章，进阶篇对应原书的第21～37章。\n本书特点：\n\t基础篇介绍基础内容，进阶篇介绍高级内容，便于教师按需选择理想的教材。\n\t全面整合了Java 6的特性，对全书的内容进行了修订和更新，以反映Java程序设计方面的最新技术发展。\n\t对面向对象程序设计进行了深入论述，包含GUI程序设计的基础和扩展实例。\n\t提供的大量实例中都包括了对问题求解的详细步骤，很多实例都是随着Java技术的引入不断地进行增强，这种循序渐进的讲解方式更易于学生学习。\n\t较上一版增加了大量难易程度不同的习题，同时在作者的网站http:\/\/www.cs.armstrong.edu\/liang\/intro8e\/index.html 中还提供了很多自测题。\n\t为满足对Web设计有浓厚兴趣的同学，本版在配套网站上增加了第39～48章的内容，以提供更多的相关信息。","price":"75.00元"},{"rating":{"max":10,"numRaters":26,"average":"8.4","min":0},"subtitle":"","author":["Charlie Hunt","Binu John"],"pubdate":"2014-3","tags":[{"count":119,"name":"Java","title":"Java"},{"count":57,"name":"性能","title":"性能"},{"count":53,"name":"性能优化","title":"性能优化"},{"count":36,"name":"JVM","title":"JVM"},{"count":32,"name":"优化","title":"优化"},{"count":18,"name":"java","title":"java"},{"count":13,"name":"计算机","title":"计算机"},{"count":11,"name":"Programming","title":"Programming"}],"origin_title":"Java Performance","image":"http:\/\/img5.douban.com\/mpic\/s27219217.jpg","binding":"","translator":["柳飞","陆明刚"],"catalog":"第1章　策略、方法和方法论　　1\n1.1 　性能问题的现状　　1\n1.2 　性能分析的两种方法：自顶向下和自底向上　　4\n1.2.1 　自顶向下　　4\n1.2.2 　自底向上　　5\n1.3 　选择正确的平台并评估系统性能　　5\n1.3.1 　选择正确的CPU架构　　6\n1.3.2 　评估系统性能　　7\n1.4 　参考资料　　7\n第2章　操作系统性能监控　　8\n2.1 　定义　　8\n2.2 　CPU使用率　　9\n2.2.1 　监控CPU使用率：Windows　　9\n2.2.2 　监控CPU使用率：Windows typeperf　　12\n2.2.3 　监控CPU使用率：Linux　　13\n2.2.4 　监控CPU使用率：Solaris　　14\n2.2.5 　命令行监控CPU使用率：Linux和Solaris　　16\n2.3 　CPU调度程序运行队列　　19\n2.3.1 　监控CPU调度程序运行队列：Windows　　19\n2.3.2 　监控CPU调度程序运行队列：Solaris　　21\n2.3.3 　监控CPU调度程序运行队列：Linux　　21\n2.4 　内存使用率　　22\n2.4.1 　监控内存利用率：Windows　　22\n2.4.2 　监控内存使用率：Solaris　　23\n2.4.3 　监控内存使用率：Linux　　24\n2.4.4 　监控锁竞争：Solaris　　25\n2.4.5 　监控锁竞争：Linux　　26\n2.4.6 　监控锁竞争：Windows　　27\n2.4.7 　隔离竞争锁　　27\n2.4.8 　监控抢占式上下文切换　　27\n2.4.9 　监控线程迁移　　28\n2.5 　网络I\/O使用率　　28\n2.5.1 　监控网络I\/O使用率：Solaris　　29\n2.5.2 　监控网络I\/O使用率：Linux　　30\n2.5.3 　监控网络I\/O使用率：Windows　　30\n2.5.4 　应用性能改进的考虑　　31\n2.6 　磁盘I\/O使用率　　31\n2.7 　其他命令行工具　　34\n2.8 　监控CPU使用率：SPARC T系列系统　　35\n2.9 　参考资料　　36\n第3章　JVM概览　　38\n3.1 　HotSpot VM的基本架构　　38\n3.2 　HotSpot VM运行时　　40\n3.2.1 　命令行选项　　40\n3.2.2 　VM生命周期　　41\n3.2.3 　VM类加载　　44\n3.2.4 　字节码验证　　46\n3.2.5 　类数据共享　　47\n3.2.6 　解释器　　48\n3.2.7 　异常处理　　49\n3.2.8 　同步　　50\n3.2.9 　线程管理　　51\n3.2.10 　C++堆管理　　53\n3.2.11 　Java本地接口　　54\n3.2.12 　VM致命错误处理　　55\n3.3 　HotSpot VM垃圾收集器　　56\n3.3.1 　分代垃圾收集　　56\n3.3.2 　新生代　　58\n3.3.3 　快速内存分配　　60\n3.3.4 　垃圾收集器　　60\n3.3.5 　Serial收集器　　61\n3.3.6 　Parallel收集器：吞吐量为先！　　62\n3.3.7　　Mostly-Concurrent收集器：低延迟为先！　　62\n3.3.8　　Garbage-First收集器：CMS替代者　　64\n3.3.9 　垃圾收集器比较　　64\n3.3.10 　应用程序对垃圾收集器的影响　　65\n3.3.11 　简单回顾收集器历史　　65\n3.4 　HotSpot VM JIT编译器　　65\n3.4.1 　类型继承关系分析　　67\n3.4.2 　编译策略　　67\n3.4.3 　逆优化　　68\n3.4.4 　Client JIT编译器概览　　69\n3.4.5 　Server JIT编译器概览　　69\n3.4.6 　静态单赋值——程序依赖图　　69\n3.4.7 　未来增强展望　　71\n3.5 　HotSpot VM自适应调优　　71\n3.5.1 　Java 1.4.2的默认值　　71\n3.5.2 　Java 5自动优化的默认值　　71\n3.5.3 　Java 6 Update 18更新后的默认优化值　　73\n3.5.4 　自适应Java堆调整　　74\n3.5.5 　超越自动优化　　75\n3.6 　参考资料　　75\n第4章　JVM性能监控　　77\n4.1 　定义　　77\n4.2 　垃圾收集　　78\n4.2.1 　重要的垃圾收集数据　　78\n4.2.2 　垃圾收集报告　　78\n4.2.3 　垃圾收集数据的离线分析　　86\n4.2.4 　图形化工具　　89\n4.3 　JIT编译器　　103\n4.4 　类加载　　104\n4.5 　Java应用监控　　106\n4.6 　参考资料　　109\n第5章　Java应用性能分析　　110\n5.1 　术语　　111\n5.1.1 　通用性能分析术语　　111\n5.1.2 　Oracle Solaris Studio Performance Analyzer术语　　112\n5.1.3 　NetBeans Profiler术语　　112\n5.2 　Oracle Solaris Studio Performance Analyzer　　112\n5.2.1 　支持平台　　113\n5.2.2 　下载\/安装Oracle Solaris Studio Performance Analyzer　　114\n5.2.3 　使用Oracle Solaris Studio Performance Analyzer 抓取性能数据　　114\n5.2.4 　查看性能数据　　118\n5.2.5 　数据表示　　125\n5.2.6 　过滤性能数据　　128\n5.2.7 　命令行工具er_print　　129\n5.3 　NetBeans Profiler　　135\n5.3.1 　支持平台　　136\n5.3.2 　下载安装NetBeans Profiler　　136\n5.3.3 　开始方法分析会话　　137\n5.3.4 　Controls子面板　　143\n5.3.5 　Status子面板　　143\n5.3.6 　Profiling Results子面板　　143\n5.3.7 　Saved Snapshots子面板　　144\n5.3.8 　View子面板　　144\n5.3.9 　Basic Telemetry子面板　　144\n5.3.10 　查看动态结果　　145\n5.3.11 　对结果进行快照　　145\n5.3.12 　启动内存分析会话　　146\n5.3.13 　查看实时结果　　148\n5.3.14 　对结果进行快照　　150\n5.3.15 　定位内存泄漏　　150\n5.3.16 　分析堆转储　　151\n5.4 　参考资料　　152\n第6章　Java应用性能分析技巧　　153\n6.1 　性能优化机会　　153\n6.2 　系统或内核态CPU使用　　154\n6.3 　锁竞争　　161\n6.4 　Volatile的使用　　171\n6.5 　调整数据结构的大小　　172\n6.5.1 　StringBuilder或StringBuffer大小的调整　　172\n6.5.2 　Java Collection类大小调整　　175\n6.6 　增加并行性　　179\n6.7 　过高的CPU使用率　　181\n6.8 　其他有用的分析提示　　182\n6.9 　参考资料　　184\n第7章　JVM性能调优入门　　185\n7.1 　方法　　185\n7.1.1 　假设条件　　187\n7.1.2 　测试基础设施需求　　188\n7.2 　应用程序的系统需求　　188\n7.2.1 　可用性　　188\n7.2.2 　可管理性　　188\n7.2.3 　吞吐量　　189\n7.2.4 　延迟及响应性　　189\n7.2.5 　内存占用　　189\n7.2.6 　启动时间　　189\n7.3 　对系统需求分级　　190\n7.4 　选择JVM部署模式　　190\n7.4.1 　单JVM部署模式　　190\n7.4.2 　多JVM部署模式　　190\n7.4.3 　通用建议　　191\n7.5 　选择JVM运行模式　　191\n7.5.1 　Client模式或Server模式　　191\n7.5.2 　32位\/64位 JVM　　192\n7.5.3 　垃圾收集器　　192\n7.6 　垃圾收集调优基础　　193\n7.6.1 　性能属性　　193\n7.6.2 　原则　　193\n7.6.3 　命令行选项及GC日志　　194\n7.7 　确定内存占用　　197\n7.7.1 　约束　　197\n7.7.2 　HotSpot VM堆的布局　　197\n7.7.3 　堆大小调优着眼点　　200\n7.7.4 　计算活跃数据大小　　201\n7.7.5 　初始堆空间大小配置　　202\n7.7.6 　其他考量因素　　203\n7.8 　调优延迟\/响应性　　204\n7.8.1 　输入　　205\n7.8.2 　优化新生代的大小　　205\n7.8.3 　优化老年代的大小　　207\n7.8.4 　为CMS调优延迟　　210\n7.8.5 　Survivor空间介绍　　212\n7.8.6 　解析晋升阈值　　214\n7.8.7 　监控晋升阈值　　215\n7.8.8 　调整Survivor空间的容量　　216\n7.8.9 　显式的垃圾收集　　222\n7.8.10 　并发永久代垃圾收集　　223\n7.8.11 　调优CMS停顿时间　　224\n7.8.12 　下一步　　225\n7.9 　应用程序吞吐量调优　　225\n7.9.1 　CMS吞吐量调优　　225\n7.9.2 　Throughput收集器调优　　226\n7.9.3 　Survivor空间调优　　228\n7.9.4 　调优并行垃圾收集线程　　231\n7.9.5 　在NUMA系统上部署　　231\n7.9.6 　下一步　　232\n7.10 　极端示例　　232\n7.11 　其他性能命令行选项　　232\n7.11.1 　实验性（最近最大）优化　　232\n7.11.2 　逃逸分析　　233\n7.11.3 　偏向锁　　233\n7.11.4 　大页面支持　　234\n7.12 　参考资料　　236\n第8章　Java应用的基准测试　　237\n8.1 　基准测试所面临的挑战　　237\n8.1.1 　基准测试的预热阶段　　238\n8.1.2 　垃圾收集　　240\n8.1.3 　使用Java Time接口　　240\n8.1.4 　剔除无效代码　　241\n8.1.5 　内联　　247\n8.1.6 　逆优化　　251\n8.1.7 　创建微基准测试的注意事项　　256\n8.2 　实验设计　　257\n8.3 　使用统计方法　　258\n8.3.1 　计算均值　　258\n8.3.2 　计算标准差　　258\n8.3.3 　计算置信区间　　259\n8.3.4 　使用假设测试　　260\n8.3.5 　使用统计方法的注意事项　　262\n8.4 　参考文献　　263\n8.5 　参考资料　　263\n第9章　多层应用的基准测试　　264\n9.1 　基准测试难题　　264\n9.2 　企业级应用基准测试的考量　　266\n9.2.1 　定义被测系统　　266\n9.2.2 　制定微基准测试　　266\n9.2.3 　定义用户交互模型　　267\n9.2.4 　定义性能指标　　270\n9.2.5 　扩展基准测试　　273\n9.2.6 　用利特尔法则验证　　274\n9.2.7 　思考时间　　275\n9.2.8 　扩展性分析　　278\n9.2.9 　运行基准测试　　278\n9.3 　应用服务器监控　　281\n9.3.1 　GlassFish监控　　281\n9.3.2 　监控子系统　　286\n9.3.3 　Solaris　　287\n9.3.4 　Linux　　288\n9.3.5 　Windows　　288\n9.3.6 　外部系统的性能　　289\n9.3.7 　磁盘I\/O　　292\n9.3.8 　监控和调优资源池　　293\n9.4 　企业级应用性能分析　　294\n9.5 　参考资料　　295\n第10章　Web应用的性能调优　　297\n10.1 　Web应用的基准测试　　298\n10.2 　Web容器的组件　　298\n10.2.1 　HTTP连接器　　299\n10.2.2 　Servlet引擎　　300\n10.3 　Web容器的监控和性能调优　　300\n10.3.1 　容器的开发和生产模式　　300\n10.3.2 　安全管理器　　301\n10.3.3 　JVM调优　　301\n10.3.4 　HTTP服务和Web容器　　303\n10.3.5 　HTTP监听器　　303\n10.4 　最佳实践　　315\n10.4.1 　Servlet和JSP最佳实践　　315\n10.4.2 　内容缓存　　324\n10.4.3 　会话持久化　　328\n10.4.4 　HTTP服务器文件缓存　　329\n10.5 　参考资料　　333\n第11章　Web Service的性能　　334\n11.1 　XML的性能　　334\n11.1.1 　XML处理的生命周期　　335\n11.1.2 　解析\/解编组　　335\n11.1.3 　访问　　338\n11.1.4 　修改　　338\n11.1.5 　序列化\/编组　　339\n11.2 　验证　　339\n11.3 　解析外部实体　　341\n11.4 　XML文档的局部处理　　343\n11.5 　选择合适的API　　346\n11.6 　JAX-WS参考实现栈　　349\n11.7 　Web Service基准测试　　350\n11.8 　影响Web Service性能的因素　　353\n11.8.1 　消息大小的影响　　353\n11.8.2 　不同Schema类型的性能特征　　355\n11.8.3 　终端服务器的实现　　358\n11.8.4 　处理程序的性能　　359\n11.9 　最佳性能实践　　361\n11.9.1 　二进制负载的处理　　361\n11.9.2 　处理XML文档　　365\n11.9.3 　使用MTOM发送XML文档　　365\n11.9.4 　使用Provider接口　　368\n11.9.5 　快速信息集　　370\n11.9.6 　HTTP压缩　　372\n11.9.7 　Web Service客户端的性能　　373\n11.10 　参考资料　　374\n第12章　Java持久化及Enterprise Java Bean的性能　　375\n12.1 　EJB编程模型　　376\n12.2 　Java持久化API及其参考实现　　376\n12.3 　监控及调优EJB容器　　379\n12.3.1 　线程池　　380\n12.3.2 　Bean池和缓存　　382\n12.3.3 　EclipseLink会话缓存　　385\n12.4 　事务隔离级　　386\n12.5 　Enterprise Java Bean的最佳实践　　387\n12.5.1 　简要说明使用的EJB基准测试　　387\n12.5.2 　EJB 2.1　　388\n12.5.3 　EJB 3.0　　400\n12.6 　Java持久化最佳实践　　403\n12.6.1 　JPA查询语言中的查询　　403\n12.6.2 　查询结果缓存　　405\n12.6.3 　FetchType　　406\n12.6.4 　连接池　　408\n12.6.5 　批量更新　　409\n12.6.6 　选择正确的数据库锁策略　　411\n12.6.7 　不带事务的读取　　411\n12.6.8 　继承　　411\n12.7 　参考资料　　412\n附录A 　重要的HotSpot VM选项　　413\n附录B 　性能分析技巧示例源代码　　429\nB.1 　锁竞争实现1　　429\nB.2 　锁竞争实现2　　439\nB.3 　锁竞争实现3　　449\nB.4 　锁竞争实现4　　459\nB.5 　锁竞争实现5　　469\nB.6 　调整容量变化1　　481\nB.7 　调整容量变化2　　492\nB.8 　增加并发性的单线程实现　　504\nB.9 　增加并发性的多线程实现　　514\n","pages":"540","images":{"small":"http:\/\/img5.douban.com\/spic\/s27219217.jpg","large":"http:\/\/img5.douban.com\/lpic\/s27219217.jpg","medium":"http:\/\/img5.douban.com\/mpic\/s27219217.jpg"},"alt":"http:\/\/book.douban.com\/subject\/25828043\/","id":"25828043","publisher":"人民邮电出版社","isbn10":"7115342970","isbn13":"9787115342973","title":"Java性能优化权威指南","url":"http:\/\/api.douban.com\/v2\/book\/25828043","alt_title":"Java Performance","author_intro":"Charlie Hunt现任Salesforce公司的性能工程架构师。曾任Oracle公司首席JVM性能工程师，负责HotSpot Java虚拟机和Java SE类库性能的改进。Charlie拥有美国伊利诺伊理工大学的计算机科学硕士学位、爱荷华州立大学的计算机科学学士学位。\nBinu John是世界上最大的社交网站创建平台Ning.com的高级性能工程师。他目前的职责是着力改善Ning平台的性能和扩展性，以支持每月数百万PV的访问量。Binu拥有美国爱荷华大学生物医学工程和计算机科学硕士学位。","summary":"Java性能优化圣经！Java之父重磅推荐！\n本书由曾任职于Oracle\/Sun的性能优化专家编写，系统而详细地讲解了性能优化的各个方面，帮助你学习Java虚拟机的基本原理、掌握一些监控Java程序性能的工具，从而快速找到程序中的性能瓶颈，并有效改善程序的运行性能。\nJava性能优化的任何问题，都可以从本书中找到答案！","price":"109.00 元"}]}</div>
<script type="text/javascript">
	function onclick1(){
		var test=document.getElementById("test");
		var re=JSON.parse(test.innerHTML);
		//alert(re.total);
		var containerUL=document.getElementById("searchBookUL");

		if(re.count==0){
			containerUL.innerHTML="查无此书！请检查输入的内容是否正确。";
			}
		else{
			
			for(var i=0;i<re.count;i++){
		        var resultLi=document.createElement("li");
		        resultLi.setAttribute("class","thumbnail col-md-2");
		        resultLi.setAttribute("style","height:240px;margin: 10px 7px 5px 7px;");

				var title=re.books[i].title
		        var len=title.length;
		        if(len>15){
		        	var title = title.slice(0, 15);
		        	title=title+"..."
			        }
		        var userId=document.getElementById("user.id").value;
		        
		        resultLi.innerHTML="<img style=\"margin:0px 0px 0px 9px;width:120px;height:160px; \" src="+re.books[i].image+">"+
		        					"<div class=\"col-md-offset-1\" style=\"height:40px;\" id=\"title\">"+title+"<\/div>"+
		        					"<form class=\"form-horizontal\" action=\"\/usedlib\/ownedBook\/save\" method=\"post\">"+
			        					"<input type=\"hidden\" name=\"user.id\" value=\""+ userId +"\" id=\"user.id\">"+
			        					"<input type=\"hidden\" name=\"book.subtitle\" value=\""+ re.books[i].subtitle +"\" id=\"book.subtitle\">"+
			        					"<input type=\"hidden\" name=\"book.author\" value=\""+ re.books[i].author +"\" id=\"book.author\">"+
			        					"<input type=\"hidden\" name=\"book.pubdate\" value=\""+ re.books[i].pubdate +"\" id=\"book.pubdate\">"+
			        					"<input type=\"hidden\" name=\"book.tags\" value=\""+ "" +"\" id=\"book.tags\">"+
			        					"<input type=\"hidden\" name=\"book.origin_title\" value=\""+ re.books[i].origin_title +"\" id=\"book.origin_title\">"+
			        					"<input type=\"hidden\" name=\"book.image\" value=\""+ re.books[i].image +"\" id=\"book.image\">"+
			        					"<input type=\"hidden\" name=\"book.binding\" value=\""+ re.books[i].binding +"\" id=\"book.binding\">"+
			        					"<input type=\"hidden\" name=\"book.translator\" value=\""+ re.books[i].translator +"\" id=\"book.translator\">"+
			        					"<input type=\"hidden\" name=\"book.catalog\" value=\""+ re.books[i].catalog +"\" id=\"book.catalog\">"+
			        					"<input type=\"hidden\" name=\"book.pages\" value=\""+ re.books[i].pages +"\" id=\"book.pages\">"+
			        					"<input type=\"hidden\" name=\"book.images\" value=\""+ "" +"\" id=\"book.images\">"+			        					
			        					"<input type=\"hidden\" name=\"book.id\" value=\""+ re.books[i].id +"\" id=\"book.id\">"+
			        					"<input type=\"hidden\" name=\"book.publisher\" value=\""+ re.books[i].publisher +"\" id=\"book.publisher\">"+
			        					"<input type=\"hidden\" name=\"book.isbn10\" value=\""+ re.books[i].isbn10 +"\" id=\"book.isbn10\">"+
			        					"<input type=\"hidden\" name=\"book.isbn13\" value=\""+ re.books[i].isbn13 +"\" id=\"book.isbn13\">"+
			        					"<input type=\"hidden\" name=\"book.title\" value=\""+ re.books[i].title +"\" id=\"book.title\">"+			        					
			        					"<input type=\"hidden\" name=\"book.url\" value=\""+ re.books[i].url +"\" id=\"book.url\">"+
			        					"<input type=\"hidden\" name=\"book.alt_title\" value=\""+ re.books[i].alt_title +"\" id=\"book.alt_title\">"+
			        					"<input type=\"hidden\" name=\"book.author_intro\" value=\""+ re.books[i].author_intro +"\" id=\"book.author_intro\">"+
			        					"<input type=\"hidden\" name=\"book.summary\" value=\""+ re.books[i].summary +"\" id=\"book.summary\">"+
			        					"<input type=\"hidden\" name=\"book.price\" value=\""+ re.books[i].price +"\" id=\"book.price\">"+
			        					
			        					"<fieldset class=\"buttons\">"+
			        						"<input type=\"submit\" name=\"create\" class=\"btn-xs btn-primary save\" value=\"将此书添加到我的书库\" id=\"create\">"+
			        					"<\/fieldset>"+
			        					
		        					"<\/form>";


		        			        
		        containerUL.appendChild(resultLi);
				}
			//alert(userId);
			}

	}


</script>	
		
	</body>
</html>
